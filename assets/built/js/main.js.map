{
  "version": 3,
  "sources": ["../../../src/js/util/util.js", "../../../src/js/util/dom-events.js", "../../../src/js/util/viewport-size.js", "../../../src/js/slide/pan-bounds.js", "../../../src/js/slide/zoom-level.js", "../../../src/js/slide/slide.js", "../../../src/js/gestures/drag-handler.js", "../../../src/js/gestures/zoom-handler.js", "../../../src/js/gestures/tap-handler.js", "../../../src/js/gestures/gestures.js", "../../../src/js/main-scroll.js", "../../../src/js/keyboard.js", "../../../src/js/util/css-animation.js", "../../../src/js/util/spring-easer.js", "../../../src/js/util/spring-animation.js", "../../../src/js/util/animations.js", "../../../src/js/scroll-wheel.js", "../../../src/js/ui/ui-element.js", "../../../src/js/ui/button-arrow.js", "../../../src/js/ui/button-close.js", "../../../src/js/ui/button-zoom.js", "../../../src/js/ui/loading-indicator.js", "../../../src/js/ui/counter-indicator.js", "../../../src/js/ui/ui.js", "../../../src/js/slide/get-thumb-bounds.js", "../../../src/js/core/eventable.js", "../../../src/js/slide/placeholder.js", "../../../src/js/slide/content.js", "../../../src/js/slide/loader.js", "../../../src/js/core/base.js", "../../../src/js/opener.js", "../../../src/js/photoswipe.js", "../../../node_modules/prismjs/prism.js", "../../js/demo.js", "../../js/copy-link.js", "../../js/dark-mode-toggle.js", "../../js/enrol-dialog.js", "../../../src/js/util/util.js", "../../../src/js/core/eventable.js", "../../../src/js/slide/placeholder.js", "../../../src/js/slide/content.js", "../../../src/js/util/viewport-size.js", "../../../src/js/slide/zoom-level.js", "../../../src/js/slide/loader.js", "../../../src/js/core/base.js", "../../../src/js/lightbox/lightbox.js", "../../js/lightbox.js", "../../js/navigation.js", "../../js/pagination.js", "../../../node_modules/tocbot/src/js/build-html.js", "../../../node_modules/tocbot/src/js/default-options.js", "../../../node_modules/tocbot/src/js/parse-content.js", "../../../node_modules/tocbot/src/js/scroll-smooth/index.js", "../../../node_modules/tocbot/src/js/update-toc-scroll.js", "../../../node_modules/tocbot/src/js/index-esm.js", "../../../node_modules/tocbot/index.js", "../../js/table-of-contents.js", "../../js/main.js", "../../../node_modules/prismjs/components/prism-javascript.min.js", "../../../node_modules/prismjs/components/prism-nginx.js", "../../../node_modules/prismjs/components/prism-bash.min.js", "../../../node_modules/prismjs/plugins/command-line/prism-command-line.js"],
  "sourcesContent": ["/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n", "// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  /* @ts-ignore */\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n", "/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n", "import { clamp } from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {Record<Axis, number>} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n    this.currZoomLevel = 1;\r\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By default, it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n", "const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n", "/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement} [element] thumbnail element\r\n * @prop {string} [src] image URL\r\n * @prop {string} [srcset] image srcset\r\n * @prop {number} [w] image width (deprecated)\r\n * @prop {number} [h] image height (deprecated)\r\n * @prop {number} [width] image width\r\n * @prop {number} [height] image height\r\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\r\n * @prop {string} [alt] image alt text\r\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\r\n * @prop {string} [html] html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.pan = { x: 0, y: 0 };\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap', 'div');\r\n    /** @type {HTMLElement | null} */\r\n    this.holderElement = null;\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n    this.heavyAppended = false;\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load(false);\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\r\n  getPlaceholderElement() {\r\n    return this.content.placeholder?.element;\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    if (!prevZoomLevel) {\r\n      prevZoomLevel = this.zoomLevels.initial;\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\r\n  isPannable() {\r\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\r\n  isZoomable() {\r\n    return Boolean(this.width) && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  /** @returns {string} */\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n", "import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = { x: 0, y: 0 };\r\n  }\r\n\r\n  start() {\r\n    if (this.pswp.currSlide) {\r\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    }\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && this.pswp.options.closeOnVerticalDrag\r\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        this.pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        if (currSlide) {\r\n          roundPoint(currSlide.pan);\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { velocity } = this.gestures;\r\n    const { mainScroll, currSlide } = this.pswp;\r\n    let indexDiff = 0;\r\n\r\n    this.pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is visible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched,\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { velocity } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Increasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        this.pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = this.pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    this.pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          this.pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = this.pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta || !currSlide) {\r\n      return false;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (this.pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n", "import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startPan = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startZoomPoint = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._zoomPoint = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._wasOverFitZoomLevel = false;\r\n    /** @private */\r\n    this._startZoomLevel = 1;\r\n  }\r\n\r\n  start() {\r\n    const { currSlide } = this.gestures.pswp;\r\n    if (currSlide) {\r\n      this._startZoomLevel = currSlide.currZoomLevel;\r\n      equalizePoints(this._startPan, currSlide.pan);\r\n    }\r\n\r\n    this.gestures.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide?.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === 0) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\r\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n", "/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide?.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide?.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n", "import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y' | null} */\r\n    this.dragAxis = null;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.prevP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._lastStartP1 = { x: 0, y: 0 };\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._intervalP1 = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]}\r\n     * @private\r\n     */\r\n    this._ongoingPointers = [];\r\n    /** @private */\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    /** @private */\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @private */\r\n    this._intervalTime = 0;\r\n    /** @private */\r\n    this._velocityCalculated = false;\r\n    this.isMultitouch = false;\r\n    this.isDragging = false;\r\n    this.isZooming = false;\r\n    /** @type {number | null} */\r\n    this.raf = null;\r\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\r\n    this._tapTimer = null;\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(\r\n        pswp.scrollWrap,\r\n        'click',\r\n        /** @type EventListener */(this._onClick.bind(this))\r\n      );\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        if (pswp.scrollWrap) {\r\n          pswp.scrollWrap.ontouchmove = () => {};\r\n          pswp.scrollWrap.ontouchend = () => {};\r\n        }\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(\r\n      pswp.scrollWrap,\r\n      pref + down,\r\n      /** @type EventListener */(this.onPointerDown.bind(this))\r\n    );\r\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\r\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\r\n    if (cancelEvent) {\r\n      events.add(\r\n        pswp.scrollWrap,\r\n        cancelEvent,\r\n        /** @type EventListener */(this.onPointerUp.bind(this))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e, 'down');\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    this._preventPointerEventBehaviour(e, 'move');\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _preventPointerEventBehaviour(e, pointerType) {\r\n    const preventPointerEvent = this.pswp.applyFilters('preventPointerEvent', true, e, pointerType);\r\n    if (preventPointerEvent) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\r\n        return ongoingPointer.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  /** update points at the start of gesture\r\n   * @private\r\n   */\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  /** @private */\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n", "import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n    this.slideWidth = 0;\r\n    /** @private */\r\n    this._currPositionIndex = 0;\r\n    /** @private */\r\n    this._prevPositionIndex = 0;\r\n    /** @private */\r\n    this._containerShiftIndex = -1;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = [];\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', 'div', this.pswp.container);\r\n      el.setAttribute('role', 'group');\r\n      el.setAttribute('aria-roledescription', 'slide');\r\n      el.setAttribute('aria-hidden', 'true');\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    return Boolean(diff);\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    /** @type {ItemHolder | undefined} */\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n\r\n      // If slides are changed by 3 screens or more - clean up previous slides\r\n      this.itemHolders.forEach((itemHolder) => {\r\n        itemHolder.slide?.destroy();\r\n        itemHolder.slide = undefined;\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        if (tempHolder) {\r\n          this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n          this._containerShiftIndex++;\r\n\r\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n        }\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        if (tempHolder) {\r\n          this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n          this._containerShiftIndex--;\r\n\r\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1]?.slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    if (pswp.currSlide) {\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\r\n  moveTo(x, dragging) {\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      const delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n\r\n    if (this.pswp.container) {\r\n      setTransform(this.pswp.container, x);\r\n    }\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n", "import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\nconst KeyboardKeyCodesMap = {\r\n  Escape: 27,\r\n  z: 90,\r\n  ArrowLeft: 37,\r\n  ArrowUp: 38,\r\n  ArrowRight: 39,\r\n  ArrowDown: 40,\r\n  Tab: 9,\r\n};\r\n\r\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\r\nconst getKeyboardEventKey = (key, isKeySupported) => {\r\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\r\n};\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    /** @private */\r\n    this._wasFocused = false;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      if (pswp.options.trapFocus) {\r\n        // Dialog was likely opened by keyboard if initial point is not defined\r\n        if (!pswp.options.initialPointerPos) {\r\n          // focus causes layout,\r\n          // which causes lag during the animation,\r\n          // that's why we delay it until the opener transition ends\r\n          this._focusRoot();\r\n        }\r\n\r\n        pswp.events.add(\r\n          document,\r\n          'focusin',\r\n          /** @type EventListener */(this._onFocusIn.bind(this))\r\n        );\r\n      }\r\n\r\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _focusRoot() {\r\n    if (!this._wasFocused && this.pswp.element) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe> | undefined} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y' | undefined} */\r\n    let axis;\r\n    let isForward = false;\r\n    const isKeySupported = 'key' in e;\r\n\r\n    switch (isKeySupported ? e.key : e.keyCode) {\r\n      case getKeyboardEventKey('Escape', isKeySupported):\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case getKeyboardEventKey('z', isKeySupported):\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\r\n        axis = 'x';\r\n        break;\r\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('Tab', isKeySupported):\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      // @ts-ignore\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (template\r\n        && document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n", "import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish = () => {},\r\n      duration = 333,\r\n      easing = DEFAULT_EASING,\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop] ?? '';\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n    /** @private */\r\n    this._finished = false;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transition won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element property was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n", "const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    this._dampedFrequency = this._naturalFrequency;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n", "import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    this._raf = 0;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish = () => {},\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = 0;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n", "import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\r\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\r\n\r\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\r\n  _start(props, isSpring) {\r\n    const animation = isSpring\r\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\r\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n", "/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n", "import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    /** @type {HTMLElement} */\r\n    const element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      const ariaText = ariaLabel || title;\r\n      if (ariaText) {\r\n        element.setAttribute('aria-label', ariaText);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          // @ts-ignore\r\n          pswp[data.onClick]();\r\n        } else if (typeof data.onClick === 'function') {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    /** @type {HTMLElement | undefined} root element by default */\r\n    let container = pswp.element;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      }\r\n    }\r\n\r\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n", "/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  // TODO: this should point to a unique id for this instance\r\n  element.setAttribute('aria-controls', 'pswp__items');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean | undefined} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout | null} */\r\n    let delayTimeout = null;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide?.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    if (pswp.ui) {\r\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n    }\r\n  }\r\n};\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n", "import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [];\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = () => {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n\r\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\r\n      return;\r\n    }\r\n\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n", "/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  /** @type {Bounds | undefined} */\r\n  let thumbBounds;\r\n  /** @type {HTMLElement | null | undefined} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w || 0,\r\n        itemData.height || itemData.h || 0\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n", "/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n", "import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n", "import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n", "import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n", "import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n", "import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this.isOpen = false;\r\n    this.isClosing = false;\r\n    this.isOpening = false;\r\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\r\n    this._duration = undefined;\r\n    /** @private */\r\n    this._useAnimation = false;\r\n    /** @private */\r\n    this._croppedZoom = false;\r\n    /** @private */\r\n    this._animateRootOpacity = false;\r\n    /** @private */\r\n    this._animateBgOpacity = false;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\r\n    this._placeholder = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._opacityElement = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._cropContainer1 = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\r\n    this._cropContainer2 = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\r\n    this._thumbBounds = undefined;\r\n\r\n\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n  }\r\n\r\n  /** @private */\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = undefined;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = undefined;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide?.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && slide?.content.usePlaceholder()\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening && slide) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity ?? false;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\r\n\r\n      if (pswp.container) {\r\n        pswp.container.style.overflow = 'hidden';\r\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n      }\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity && pswp.bg) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = '1';\r\n        }\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      if (pswp.mainScroll.itemHolders[0]) {\r\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      }\r\n      if (pswp.mainScroll.itemHolders[2]) {\r\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n      }\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve(true);\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve(true);\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _initiate() {\r\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom && pswp.container) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide?.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      if (pswp.currSlide) {\r\n        pswp.currSlide.zoomAndPanToInitial();\r\n        this._animateTo(\r\n          pswp.currSlide.container,\r\n          'transform',\r\n          pswp.currSlide.getCurrentTransform()\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._animateBgOpacity && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    // do not animate opacity if it's already at 0\r\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    if (currSlide) {\r\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n      if (animate) {\r\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n      } else {\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n", "import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\r\n\r\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\r\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} trapFocus\r\n * Trap focus within PhotoSwipe element while it's open.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PreparedPhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  trapFocus: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = this._prepareOptions(options || {});\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.offset = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.viewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     */\r\n    this.bgOpacity = 1;\r\n    this.currIndex = 0;\r\n    this.potentialIndex = 0;\r\n    this.isOpen = false;\r\n    this.isDestroying = false;\r\n    this.hasMouse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\r\n    this._initialItemData = {};\r\n    /** @type {Bounds | undefined} */\r\n    this._initialThumbBounds = undefined;\r\n\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.topBar = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.template = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.container = undefined;\r\n    /** @type {HTMLElement | undefined} */\r\n    this.scrollWrap = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.currSlide = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n    this.animations = new Animations();\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  /** @returns {boolean} */\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return false;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    if (this.element) {\r\n      this.element.className += ' ' + rootClasses;\r\n    }\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      const { itemHolders } = this.mainScroll;\r\n\r\n      // Add content to the previous and next slide\r\n      if (itemHolders[0]) {\r\n        itemHolders[0].el.style.display = 'block';\r\n        this.setContent(itemHolders[0], this.currIndex - 1);\r\n      }\r\n      if (itemHolders[2]) {\r\n        itemHolders[2].el.style.display = 'block';\r\n        this.setContent(itemHolders[2], this.currIndex + 1);\r\n      }\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    if (this.mainScroll.itemHolders[1]) {\r\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    }\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    return clamp(index, 0, numSlides - 1);\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.appendHeavy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide?.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide?.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this._listeners = {};\r\n\r\n    if (this.scrollWrap) {\r\n      this.scrollWrap.ontouchmove = null;\r\n      this.scrollWrap.ontouchend = null;\r\n    }\r\n\r\n    this.element?.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.destroy();\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide?.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = undefined;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  /** @returns {Point} */\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    if (this.bg) {\r\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element?.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp', 'div');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', 'div', this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\r\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\r\n\r\n    // aria pattern: carousel\r\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\r\n    this.container.setAttribute('aria-live', 'off');\r\n    this.container.setAttribute('id', 'pswp__items');\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PreparedPhotoSwipeOptions} */\r\n    return {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n", "\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism\u2019s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you\u2019re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading\u2026';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '\u2716 Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '\u2716 Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n", "/* \n * utilty for use with demo version of transmission \n * create a customs options picker and set class entries on the <site> element to reflect the picked option\n *\n * the behaviour of the options is determined by demo.js\n * \n * to enable this functionality, use code injection to insert a data-demo-site attribute to root of the doc\n *      <script>\n *          document.documentElement.setAttribute('data-demo-site', 'true');\n *      </script>\n*/\n\nexport function demoOptionsPicker() {\n    const demoSite = document.querySelector('[data-demo-site=\"true\"] .site');\n    const downloadIcon =`<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <title></title> <g id=\"Complete\"> <g id=\"download\"> <g> <path d=\"M3,12.3v7a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></path> <g> <polyline data-name=\"Right\" fill=\"none\" id=\"Right-2\" points=\"7.9 12.3 12 16.3 16.1 12.3\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></polyline> <line fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"2.7\" y2=\"14.2\"></line> </g> </g> </g> </g> </g></svg>`;\n    const gearIcon = `<svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19.19 3.757A1 1 0 0018.22 3h-4.44a1 1 0 00-.97.757l-.66 2.644a1 1 0 01-.47.623l-1.291.747a1 1 0 01-.776.095l-2.62-.75a1 1 0 00-1.142.462l-2.219 3.844a1 1 0 00.171 1.219l1.96 1.895a1 1 0 01.305.719v1.49a1 1 0 01-.305.72l-1.96 1.894a1 1 0 00-.17 1.22l2.218 3.843a1 1 0 001.141.461l2.61-.746a1 1 0 01.793.106l.963.584a1 1 0 01.43.54l.984 2.95a1 1 0 00.949.683h4.558a1 1 0 00.949-.684l.982-2.947a1 1 0 01.435-.542l.982-.587a1 1 0 01.79-.103l2.59.745a1 1 0 001.142-.461l2.222-3.848a1 1 0 00-.166-1.214l-1.933-1.896a1 1 0 01-.3-.713v-1.5a1 1 0 01.3-.713l1.933-1.896a1 1 0 00.166-1.214l-2.222-3.848a1 1 0 00-1.142-.46l-2.6.747a1 1 0 01-.774-.093l-1.31-.75a1 1 0 01-.474-.625l-.66-2.64z\"></path> <circle cx=\"16\" cy=\"16\" r=\"5\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"2\"></circle> </g></svg>`;\n    const downloadURL = `https://github.com/nickabs/transmission/releases/latest/download/transmission.zip`;\n    if (!demoSite) {\n        return false;\n    }\n\n    const classAlternatives = {\n        // list of the custom options \n        siteWide: {\n            navBarStyle: ['expanded-nav', 'minified-nav'],\n            navBarOption: ['fixed-navigation-bar' , 'scrolling-navigation-bar'],\n            heroStyle: ['hero-style-plain', 'hero-style-color-image', 'hero-style-grayscale-image'],\n            sidebarOption: ['sidebar-top','sidebar-left', 'sidebar-right', 'sidebar-bottom' , 'sidebar-none'],\n            footerOption: [ 'footer-style-all', 'footer-style-copyright-privacy', 'footer-style-copyright', 'footer-style-privacy',\n                'footer-style-ghost-theme', 'footer-style-ghost', 'footer-style-none' ],\n            enrolOption: ['newsletter','subscribe','newsletter-subscribe','enrol-none'],\n            authorOption: ['show-author-names', 'show-author-images', 'show-author-names-and-images', \n                    'show-author-none']\n        },\n        homePage: {\n            focusPosition: ['home-page-list', 'home-page-focus-right', 'home-page-focus-left'],\n            ShowFeaturedArticles: [ 'show-featured-articles', 'use-latest-articles' ]\n        },\n        post: {\n            tableOfContentsOption: ['post-toc-full','post-toc-minified','post-toc-none'],\n            relatedPostsOption: ['show-related-posts', 'hide-related-posts'],\n            oneTimePaymentRequest: ['show-payment-request', 'hide-payment-request']\n        }\n    };\n    \n    function updateSiteClass(property, className) {\n        const section = Object.values(classAlternatives).find(section => property in section);\n        if (!section) return false;\n    \n        const validClasses = section[property];\n        if (!validClasses.includes(className)) {\n            console.error(`Invalid class name: ${className} for property: ${property}`);\n            return false;\n        }\n    \n        //remove the class option previously selected and add the new one\n        validClasses.forEach(cls => demoSite.classList.remove(cls));\n        demoSite.classList.add(className);\n        return true;\n    }\n\n\n    function createDemoOptions() {\n        const demoOptions = document.createElement('aside');\n        demoOptions.classList.add('demo-options','options-picker-closed');\n\n        const demoOptionsButton = document.createElement('button');\n        demoOptionsButton.innerHTML = `\n            ${gearIcon}\n            <div class=\"demo-options-button-description\">Customise</div>\n        `;\n\n        demoOptionsButton.classList.add('icon','demo-options-button')\n        demoOptions.appendChild(demoOptionsButton);\n\n        demoOptionsButton.addEventListener('click', () => {\n            console.log('click');\n            demoOptions.classList.toggle('options-picker-closed');\n        });\n\n\n        const optionsPickerContainer = createOptionsPickerContainer();\n        demoOptions.appendChild(optionsPickerContainer);\n\n        const hr = document.createElement('hr');\n        demoOptions.appendChild(hr);\n\n        const downloadLink = document.createElement('a');\n        downloadLink.href= `${downloadURL}`\n        downloadLink.classList.add('icon','download-link')\n        downloadLink.innerHTML = `\n            ${downloadIcon}\n            <div class=\"download-button-description\">Download</div>\n        `;\n\n        //<a href=\"path/to/yourfile.pdf\" download class=\"download-link\">Download File</a>\n        demoOptions.appendChild(downloadLink);\n\n\n        return demoOptions;\n    }\n\n    function createOptionsPickerContainer() {\n        const container = document.createElement('div');\n        container.classList.add('options-picker-container');\n\n        const form = document.createElement('form');\n        form.classList = 'options-picker-form';\n    \n        // Create fieldsets for each section (siteWide, home, page)\n        Object.entries(classAlternatives).forEach(([sectionName, properties]) => {\n\n            const fieldset = document.createElement('fieldset');\n            fieldset.classList.add('form-fieldset');\n\n            const legend = document.createElement('legend');\n\n            const pretifiedSectionName = sectionName.charAt(0).toUpperCase() + sectionName.slice(1).replace(/([A-Z])/g, ' $1');\n\n            legend.textContent = pretifiedSectionName + ' Options'; \n            \n            fieldset.appendChild(legend);\n\n            /*\n             * Create form groups for each option (navBarStyle, heroStyle ...) in this section\n             *  <form>\n             *      <label>nav bar style</label>\n             *      <select>\n             *          <option>expanded-nav</option>\n             *          ...\n            */\n            \n            Object.entries(properties).forEach(([property, options]) => {\n                const formGroup = document.createElement('div');\n                formGroup.classList.add('form-group');\n    \n                const label = document.createElement('label');\n                label.setAttribute('for', property);\n                label.classList.add('form-label');\n                label.textContent = property.replace(/([A-Z])/g, ' $1').toLowerCase();\n    \n                const select = document.createElement('select');\n                select.id = property;\n                select.classList.add('form-select');\n                select.name = property;\n\n                let placeholderOption = document.createElement('option');\n                placeholderOption.value=\"\"\n                placeholderOption.selected = true; \n                placeholderOption.disabled = true; \n                placeholderOption.textContent = `Select ${\"aeiou\".includes(label.textContent.charAt(0).toLowerCase()) ? \"an\" : \"a\"} ${label.textContent}`;\n\n                select.appendChild(placeholderOption);\n    \n                options.forEach(optionValue => {\n                    const option = document.createElement('option');\n                    option.value = optionValue;\n                    option.textContent = optionValue;\n                    select.appendChild(option);\n                });\n    \n                select.addEventListener('change', function() {\n                    updateSiteClass(property, this.value);\n                });\n\n                formGroup.appendChild(label);\n                formGroup.appendChild(select);\n                fieldset.appendChild(formGroup);\n            });\n    \n            const details = document.createElement('details')\n            details.open = false;\n\n            const summary = document.createElement('summary')\n            summary.textContent = `${pretifiedSectionName.toLowerCase()} options`\n\n            details.appendChild(summary);\n            details.appendChild(fieldset)\n            form.appendChild(details);\n\n            // only show one open section of the options at a time\n            details.querySelector('summary').addEventListener('click', (e) => {\n                document.querySelectorAll('.demo-options details').forEach(d => {\n                if (d !== details) d.open = false;\n                });\n            });\n\n        });\n    \n        container.appendChild(form);\n        return container;\n    }\n    \n    const demoOptions = createDemoOptions();\n    demoSite.appendChild(demoOptions);\n}\n", "/* copy link button (copies link and shows a tooltip)  */\nexport function copyLink() {\n  const copyLinkElement = document.querySelector(\".copy-link\");\n  const sidebar = document.querySelector(\".sidebar\")\n\n  if (!copyLinkElement || !sidebar) return;\n\n  const handleCopyLinkClick = () => {\n    // Write the current URL to the clipboard\n    navigator.clipboard.writeText(window.location.href).then(() => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'tooltip';\n      tooltip.textContent = 'Copied!';\n      sidebar.appendChild(tooltip);\n      console.log(copyLinkElement);\n      setTimeout(() => tooltip.remove(), 500);\n    });\n  };\n\n  copyLinkElement.addEventListener(\"click\", handleCopyLinkClick);\n}\n", "/*\n * toggle between dark and light mode\n * if the user has set a system preference then default to that setting\n * if they specify a setting using the site dark/light mode buttons, save it in local storage so it is remembered next time\n * \n*/\nexport function darkModeToggle() {\n    const darkModeButton = document.querySelector(\"button.dark-mode\");\n    const lightModeButton = document.querySelector(\"button.light-mode\");\n\n    if (! darkModeButton || ! lightModeButton) {\n        return;\n    }\n\n    const icons = document.querySelectorAll('.internal-tags .sidebar-link-icon'); // sidebar icons need to be updated according to the color scheme preference\n    const storedDataColorScheme = localStorage.getItem('data-color-scheme');\n    const systemSchemePreference = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n\n    document.documentElement.setAttribute('data-color-scheme', storedDataColorScheme || systemSchemePreference);\n\n    /* \n     * where an svg icon is loaded externally, e.g in the sidebar, \n     * we have to update the svg paths to reflect the selected color scheme \n     */\n    function updateIconColor() {\n        // get current setting\n        const fillColor = getComputedStyle(document.documentElement).getPropertyValue('--icon-color').trim();\n        if (!icons) return;\n\n        icons.forEach(icon => {\n            const svgDoc = icon.contentDocument;\n            if (!svgDoc) return; \n\n            const elements = svgDoc.querySelectorAll('path, circle, rect, ellipse');\n            \n            elements.forEach(element => {\n                element.setAttribute('fill', fillColor);\n                element.setAttribute('stroke', fillColor);\n            });\n        });\n    }\n\n    function onClick(event) {\n        var currentScheme = document.documentElement.getAttribute(\"data-color-scheme\");\n        var targetDataColorScheme = currentScheme == \"dark\" ? \"light\" : \"dark\";\n\n        document.documentElement.setAttribute('data-color-scheme', targetDataColorScheme)\n\n        localStorage.setItem('data-color-scheme', targetDataColorScheme);\n\n        // set color-scheme on the comments iframe\n        // As of 5.0 Ghost helper supports {{comments mode=\"auto\" }} which will use the background color to determine if the theme is using a dark mode\n        // ... but this only works after a screen refresh.  The code below will make the scheme change on clicking the dark mode toggle\n        const commentsScript = document.querySelector('script[data-color-scheme]');\n        if (commentsScript) {\n            commentsScript.setAttribute('data-color-scheme', targetDataColorScheme);\n        };\n\n        /* update the sidebar icons */\n        updateIconColor();\n    }\n\n    darkModeButton.addEventListener('click', onClick);\n    lightModeButton.addEventListener('click', onClick);\n\n  }", "/* this function will open a pop-up window asking the user to check their inbox having enrolled for a newsletter\n* as of 2024/09 this is only required for newsletter registrations.  When using the portal/sign-up feature \n* Ghost automatically opens a similar window\n*/\nexport function enrolDialog() {\n    const dialog = document.querySelector(\".enrol-dialog\");\n    const closeButton = document.querySelector(\".enrol-dialog-button\");\n    const form = document.querySelector(\"form.enrol-newsletter\");\n\n    if (dialog && closeButton) {\n        closeButton.addEventListener(\"click\", () => {\n            dialog.close();\n            dialog.style.display = \"none\"; \n        });\n    }\n\n    if (form) {\n        const observer = new MutationObserver((mutations) => {\n            for (const mutation of mutations) {\n                if (mutation.attributeName === \"class\" && mutation.target.classList.contains(\"success\")) {\n                    dialog.showModal();\n                    dialog.style.display = \"flex\";\n                    break; \n                }\n            }\n        });\n        observer.observe(form, { attributes: true, attributeFilter: [\"class\"] });\n    }\n};\n", "/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n", "/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n", "import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n", "import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n", "/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n", "const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n", "import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n", "import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n", "import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp) { // ... if PhotoSwipe is already open\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp || !this.options) {\r\n      return false;\r\n    }\r\n\r\n    // Use the first gallery element if dataSource is not provided\r\n    if (!dataSource && this.options.gallery && this.options.children) {\r\n      const galleryElements = getElementsFromOption(this.options.gallery);\r\n      if (galleryElements[0]) {\r\n        dataSource = {\r\n          gallery: galleryElements[0]\r\n        };\r\n      }\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n", "import PhotoSwipeLightbox from 'photoswipe/lightbox';\n\nexport function lightbox() {\n  const arrow =  ' <svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 32 30\" width=\"32\" height=\"30\">\\\n    <path d=\"M26.667 14.667v2.667h-16L18 24.667l-1.893 1.893L5.547 16l10.56-10.56L18 7.333l-7.333 7.333h16z\"> \\\n    </path> </svg>';\n\n  const options = {\n    arrowPrevSVG: arrow,\n    arrowNextSVG: arrow,\n    zoom: false,\n    gallery: '.kg-image-card, .kg-gallery-card',\n    children: 'img',\n    bgOpacity: 0.8,\n    closeOnScroll: true,\n    Xpadding: { top: 40, bottom: 40, left: 0, right: 0 },\n    imageClickAction: 'close',\n    tapAction: 'close',\n    pswpModule: () => import('photoswipe')\n  };\n\n  const lightbox = new PhotoSwipeLightbox(options);\n\n  lightbox.init();\n\n  /* \n    modify the item data used by photoswipe based on the attributes on the card image.\n    For images without height and width variables (e.g from posts converted from wordpress \n    the attributes are retrieved from the image\n    */\n  lightbox.addFilter('domItemData', (itemData, element, linkEl) => {\n\n    if (itemData) {\n      itemData.w = element.getAttribute(\"width\");\n      itemData.h = element.getAttribute(\"height\");\n      if ( ! itemData.h || ! itemData.w ) {\n        // get the original image size\n        itemData.w = element.naturalWidth;\n        itemData.h = element.naturalHeight;\n      }\n      itemData.src = element.getAttribute(\"src\");\n      itemData.srcset = element.getAttribute(\"srcset\");\n    }\n    return itemData;\n  });\n}\n", "/* \n* create the <li> html structure under the <nav> element used in the site-header\n* the items are structured based on markup in the ghost navigation names:\n* names prefixed with - indicate a submenu and -- indicates a submenu item\n* for example\n*\n*  ghost navigation          rendered html\n*  -----------------         ------------------\n*  HOME                      <li class='menu-link-item'>\n*                              <a href='http://localhost:2368/'>HOME</a>\n*                            </li>\n*  -HONDA C90                <li class='menu-link-item has-submenu'>\n*                                <a href='#'>HONDA C90 \u2304</a>\n*                                <div class='submenu-links-container'>\n*                                    <div class='submenu-links-header'>\n*                                        <p class='submenu-links-title'>HONDA C90</p>\n*                                    </div>\n*                                    <ul class='submenu-links'>\n*  --introduction                        <li class='submenu-link-item'>\n*                                            <a href='http://localhost:2368/2019/11/16/honda-c90-introduction/'>introduction</a>\n*                                        </li>\n*  --engine                              <li class='submenu-link-item'>\n*                                            <a href='http://localhost:2368/tag/engine/'>engine</a>\n*                                        </li>\n*                                    </ul>\n*                                </div>\n*                            </li>\n*/\n\nexport function createMainNavMenu() {\n  const menuIndentRegex = /(^-{1,})(.*)/; // Match the -submenu and --submenu-link-item navigation entries\n\n  function createSubMenu(menuName) {\n      const div = document.createElement('div');\n      div.classList.add('submenu-links-container');\n\n      const div1 = document.createElement('div');\n      div1.classList.add('submenu-links-header');\n\n      const p1 = document.createElement('p');\n      p1.classList.add('submenu-links-title');\n      p1.appendChild(document.createTextNode(menuName));\n      div1.appendChild(p1);\n\n      div.appendChild(div1);\n\n      const ul = document.createElement('ul');\n      ul.classList.add('submenu-links');\n\n      div.appendChild(ul);\n\n      return div;\n  }\n\n  function processMenuItems() {\n      const menuItems = document.querySelectorAll('.menu-links .menu-link-item');\n      let submenu = null;\n\n      for (let i = 0; i < menuItems.length; ++i) {\n          const match = menuItems[i].lastElementChild.innerText.match(menuIndentRegex);\n\n          if (match) {\n              // Remove the submenu & submenu-link-item indent indicators (- --)\n              menuItems[i].lastElementChild.innerText = menuItems[i].lastElementChild.innerText.replace(menuIndentRegex,'$2').trim();\n              const menuName=menuItems[i].lastElementChild.innerText;\n\n              if (match[1].length == 1) { // Submenu (-)\n                  menuItems[i].classList.add('has-submenu');\n\n                  const anchor = document.createElement('a');\n                  anchor.setAttribute('href', '#');\n                  anchor.classList.add('tabindex=0');\n                  anchor.appendChild(document.createTextNode(menuName));\n          \n                  const sup = document.createElement('sup');\n                  sup.appendChild(document.createTextNode(' \u2304'));\n                  anchor.appendChild(sup);\n\n                  const div = createSubMenu(menuName);\n                  menuItems[i].replaceChildren(anchor);\n                  menuItems[i].appendChild(div);\n                  submenu = menuItems[i];\n              } else if (submenu) { // Submenu item (--)\n                  menuItems[i].classList.add('submenu-link-item');\n                  menuItems[i].classList.remove('menu-link-item');\n                  submenu.querySelector('.submenu-links').appendChild(menuItems[i]);\n              }\n          }\n      }\n      document.querySelector('.menu-links-container').classList.add('menu-links-ready');\n  }\n\n  processMenuItems();\n}\n\n/* \n * open/close nav (main) menu and submenus\n * .menu-links-container.menu-links-active is set when the nav is opened using the hamburger button \n * .submenu.submenu-links-active is set when an item with a submenu is opened\n*/\nexport function mainNavMenuToggle() {\n  const nav = document.querySelector('.menu-links-container');\n  const navToggle = document.querySelector('.menu-links-toggle');\n\n  function handleDocumentClick(event) {\n    let activeSubmenu = nav.querySelector('.submenu-links-active');\n    let clickedItem;\n\n\n    // when a submenu item is clicked no need to do anythng further (new page will open)\n    if (event.target.closest(\".submenu-link-item\")) {\n      return;\n    }\n    else if (event.target.closest(\".menu-link-item\") && ! event.target.closest(\".submenu-links-header\")) { // do not count a click on a submenu header as a clicked item\n      clickedItem= event.target.closest(\".menu-link-item\");\n    }\n\n    if (clickedItem) {\n      if (clickedItem.classList.contains('has-submenu')) {\n        event.preventDefault(); // prevent the page scrolling to the top when a menu item is clicked;\n      }\n\n      if (activeSubmenu) { // close any previously opened submenu\n        activeSubmenu.classList.remove('submenu-links-active');\n      }\n\n      if (! clickedItem.contains(activeSubmenu)) { // do not reopen the submenu item if it was closed by the statement above\n        if (clickedItem.classList.contains(\"has-submenu\")) {\n          clickedItem.querySelector(\".submenu-links-container\").classList.add('submenu-links-active');\n        }\n      }\n\n      return;\n    }\n\n    // toggle nav if the hamburger menu is clicked\n    if (event.target.closest('.menu-links-toggle')) {\n      nav.classList.toggle('menu-links-active');\n      return;\n    }\n\n    // when click is outside of menus, close the latest menu\n    if (activeSubmenu) { // close any previously opened submenu\n      activeSubmenu.classList.remove('submenu-links-active');\n    }\n    else if (nav.classList.contains('menu-links-active')) {\n        nav.classList.remove('menu-links-active');\n    }\n  }\n\n  document.addEventListener('click', handleDocumentClick);\n}\n\n/*\n * open/close nav link item menus when sidebar items are clicked \n * note the user decides whether to include internal tags or secondary links on the sidebar\n*/\nexport function sidebarToggle() {\n    const fillColor = getComputedStyle(document.documentElement).getPropertyValue('--icon-color').trim();\n    const internalTags = document.querySelector('.internal-tags');\n    const internalTagItems = internalTags.querySelectorAll('.sidebar-link-item');\n    const regex = /^##[0-9]*-/;  // this is the pattern of internal nag names that are to be used for secondary navigation\n    const containers = {\n        share: document.querySelector('.share-links-container'),\n        secondary: document.querySelector('.secondary-links-container'),\n        sidebar: document.querySelector('.sidebar')\n    };\n\n    function toggle(container) {\n        container.classList.toggle('display-item-details');\n    }\n\n    document.addEventListener('click', function(event) {\n        const { share, secondary, sidebar } = containers;\n\n        const clickedLink = event.target.closest('a');\n        if (sidebar?.contains(event.target) && clickedLink) {\n            return;\n        }\n\n        if (share?.contains(event.target)) {\n            toggle(share);\n            if (secondary?.classList.contains('display-item-details')) toggle(secondary);\n            if (sidebar?.classList.contains('display-item-details')) toggle(sidebar);\n            return;\n        }\n\n        if (secondary?.contains(event.target)) {\n            toggle(secondary);\n            if (share?.classList.contains('display-item-details')) toggle(share);\n            if (sidebar?.classList.contains('display-item-details')) toggle(sidebar);\n            return;\n        }\n\n        if (sidebar?.contains(event.target)) {\n            toggle(sidebar);\n            if (share?.classList.contains('display-item-details')) toggle(share);\n            if (secondary?.classList.contains('display-item-details')) toggle(secondary);\n            return;\n        }\n\n        /* close open menus when clicking outside */\n        if (share?.classList.contains('display-item-details')) toggle(share);\n        if (secondary?.classList.contains('display-item-details')) toggle(secondary);\n    });\n\n    /* \n    * remove the secondary nav indicator (e.g ##1-) from internal tag names. The number is optional and there to sort the icons\n    *\n    * make the sidebar icons 20px x 20px:\n    *  the svg element is embeded from the tag's feature_post image into the HTML so that we can dynamically adjut the \n    *  color according to dark mode settings (see dark-mode-toggle.js). \n    *  as a consequence, we can't control the height /width with css and have to do it here instead\n    */\n\n    /* the icons are loaded by the user - update the size and color so they are displayed consistently in the sidebar*/\n    function updateInternalTagIcons (icon) {\n        try {\n            // get the doc content from inside the icon object element\n            const svgDoc = icon.contentDocument;\n            if (! svgDoc ) return;\n\n            const svgElement = svgDoc.querySelector('svg');\n            if (svgElement) {\n                const viewBox = svgElement.getAttribute('viewBox');\n                const naturalWidth = svgElement.getAttribute('width');\n                const naturalHeight = svgElement.getAttribute('height');\n                if (!viewBox) {\n                    if (!naturalWidth || !naturalHeight){\n                        const bbox = svgElement.getBBox(); // Returns the bounding box of the element\n                        svgElement.setAttribute('viewBox', `0 0 ${bbox.width} ${bbox.height}`);\n                    } else {\n                        svgElement.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\n                    }\n                }\n                svgElement.setAttribute('height', '20px');\n                svgElement.setAttribute('width', '20px');\n            \n                const elements = svgElement.querySelectorAll('path, circle, rect, ellipse');\n                elements.forEach(element => {\n                    element.setAttribute('fill', fillColor);\n                    element.setAttribute('stroke', fillColor);\n                });\n            }\n        } catch (e) {\n            console.error('Error adjusting SVG:', e);\n        }\n    }\n\n    if (internalTagItems) {\n        internalTagItems.forEach(internalTag => {\n\n            // if the user has tagged multiple posts/pages with this tag, the element will contain multiple links\n            // we keep the first (most recent publication) link\n            const firstLink = internalTag.querySelector('a');\n            let sibling = firstLink.nextElementSibling;\n            while (sibling) {\n                const nextSibling = sibling.nextElementSibling;\n                sibling.remove();\n                sibling = nextSibling;\n            }\n\n            const description = firstLink.querySelector('.sidebar-link-description');\n            const icon = firstLink.querySelector('.sidebar-link-icon');\n\n            if (description) {\n                if (regex.test(description.textContent)) {\n                    description.textContent = description.textContent.replace(regex,'');\n                } else {\n                    internalTag.remove(); // standard internal tags (these start with a single #) are not used in the navigation\n                }\n            }\n\n            // the document content for the object is from an external svg so may load after the doc\n            const svgDoc = icon.contentDocument;\n            if (svgDoc && svgDoc.querySelector('svg')) {\n                updateInternalTagIcons(icon);\n            } else {\n                // SVG isn't loaded yet, wait for load event\n                icon.addEventListener('load', () => {\n                    updateInternalTagIcons(icon);\n                });\n            }\n\n        });\n        internalTags.classList.remove('hidden'); // only show the icons after they are resized.\n\n        // for the secondary link items we use the first two characters of the words in the description instead of an icon\n        const secondaryLinksItems = document.querySelectorAll('.secondary-links .sidebar-link-item');\n        if (secondaryLinksItems) {\n            secondaryLinksItems.forEach(item => {\n                const span = document.createElement('span');\n                const itemDescription = item.querySelector('.sidebar-link-description') ;\n                if (itemDescription) {\n                    const words = itemDescription.textContent.replace(/[^a-zA-Z0-9\\s]/g, ' ').trim().split(/\\s+/);\n\n                    let firstLetters = words.slice(0, 2).map(word => word.charAt(0).toUpperCase()).join('');\n\n                    if (words.length === 1) {\n                        firstLetters=(itemDescription.textContent.slice(0, 2)).toUpperCase();\n                    }\n\n                    span.textContent = firstLetters;\n                    span.classList.add('sidebar-link-icon');\n                    const link=item.querySelector('.sidebar-link');\n                    if (link) {\n                        link.insertBefore(span,link.firstChild);\n                    }\n                }\n            });\n        }\n    }\n}\n", "export function pagination(isInfinite, callback) {\n    var buttonElement = document.querySelector('.pagination');\n\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement && buttonElement) {\n        buttonElement.remove();\n        return;\n    }\n\n    // post list element\n    var currentArticleList = document.querySelector('.paginated');\n    if (!currentArticleList) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            buttonElement.remove();\n            return;\n        }\n\n        // append next page of article-cards\n        // the next elements are organized as per index.hbs\n        var nextPageArticleList = this.response.querySelectorAll('.article-card');\n        var fragment = document.createDocumentFragment();\n        var elems = [];\n        nextPageArticleList.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n\n            var clonedItem = document.importNode(item, true);\n\n            if (callback) {\n                clonedItem.style.position = 'absolute';\n                clonedItem.style.visibility = 'hidden';\n                elems.push(clonedItem);\n            }\n\n            fragment.appendChild(clonedItem);\n        });\n\n        currentArticleList.appendChild(fragment);\n\n        if (callback) {\n            callback(elems);\n        }\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            if (buttonElement) {\n                buttonElement.remove();\n            }\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n\n        if (isInfinite) {\n            imagesLoaded(currentArticleList, function () {\n                if (currentArticleList.getBoundingClientRect().bottom <= lastWindowHeight) {\n                    console.log(currentArticleList.getBoundingClientRect().bottom, lastWindowHeight)\n                    requestTick();\n                }\n            });\n        }\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (isInfinite && lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    if (isInfinite) {\n        window.addEventListener('scroll', onScroll, {passive: true});\n        window.addEventListener('resize', onResize);\n        requestTick();\n    } else {\n        buttonElement.addEventListener('click', requestTick);\n    }\n}\n", "/**\n * This file is responsible for building the DOM and updating DOM state.\n *\n * @author Tim Scanlin\n */\n\nexport default function (options) {\n  const forEach = [].forEach\n  const some = [].some\n  const body = typeof window !== 'undefined' && document.body\n  const SPACE_CHAR = ' '\n  let tocElement\n  let currentlyHighlighting = true\n\n  /**\n   * Create link and list elements.\n   * @param {Object} d\n   * @param {HTMLElement} container\n   * @return {HTMLElement}\n   */\n  function createEl (d, container) {\n    const link = container.appendChild(createLink(d))\n    if (d.children.length) {\n      const list = createList(d.isCollapsed)\n      d.children.forEach((child) => {\n        createEl(child, list)\n      })\n      link.appendChild(list)\n    }\n  }\n\n  /**\n   * Render nested heading array data into a given element.\n   * @param {HTMLElement} parent Optional. If provided updates the {@see tocElement} to match.\n   * @param {Array} data\n   * @return {HTMLElement}\n   */\n  function render (parent, data) {\n    const collapsed = false\n    const container = createList(collapsed)\n\n    data.forEach((d) => {\n      createEl(d, container)\n    })\n\n    // Return if no TOC element is provided or known.\n    tocElement = parent || tocElement\n    if (tocElement === null) {\n      return\n    }\n\n    // Remove existing child if it exists.\n    if (tocElement.firstChild) {\n      tocElement.removeChild(tocElement.firstChild)\n    }\n\n    // Just return the parent and don't append the list if no links are found.\n    if (data.length === 0) {\n      return tocElement\n    }\n\n    // Append the Elements that have been created\n    return tocElement.appendChild(container)\n  }\n\n  /**\n   * Create link element.\n   * @param {Object} data\n   * @return {HTMLElement}\n   */\n  function createLink (data) {\n    const item = document.createElement('li')\n    const a = document.createElement('a')\n    if (options.listItemClass) {\n      item.setAttribute('class', options.listItemClass)\n    }\n\n    if (options.onClick) {\n      a.onclick = options.onClick\n    }\n\n    if (options.includeTitleTags) {\n      a.setAttribute('title', data.textContent)\n    }\n\n    if (options.includeHtml && data.childNodes.length) {\n      forEach.call(data.childNodes, (node) => {\n        a.appendChild(node.cloneNode(true))\n      })\n    } else {\n      // Default behavior. Set to textContent to keep tests happy.\n      a.textContent = data.textContent\n    }\n    a.setAttribute('href', `${options.basePath}#${data.id}`)\n    a.setAttribute('class', `${options.linkClass +\n      SPACE_CHAR}node-name--${data.nodeName}${SPACE_CHAR}${options.extraLinkClasses}`)\n    item.appendChild(a)\n    return item\n  }\n\n  /**\n   * Create list element.\n   * @param {Boolean} isCollapsed\n   * @return {HTMLElement}\n   */\n  function createList (isCollapsed) {\n    const listElement = (options.orderedList) ? 'ol' : 'ul'\n    const list = document.createElement(listElement)\n    let classes = options.listClass + SPACE_CHAR + options.extraListClasses\n    if (isCollapsed) {\n      // No plus/equals here fixes compilation issue.\n      classes = classes + SPACE_CHAR + options.collapsibleClass\n      classes = classes + SPACE_CHAR + options.isCollapsedClass\n    }\n    list.setAttribute('class', classes)\n    return list\n  }\n\n  /**\n   * Update fixed sidebar class.\n   * @return {HTMLElement}\n   */\n  function updateFixedSidebarClass () {\n    const scrollTop = getScrollTop()\n\n    const posFixedEl = document.querySelector(options.positionFixedSelector)\n    if (options.fixedSidebarOffset === 'auto') {\n      options.fixedSidebarOffset = tocElement.offsetTop\n    }\n\n    if (scrollTop > options.fixedSidebarOffset) {\n      if (posFixedEl.className.indexOf(options.positionFixedClass) === -1) {\n        posFixedEl.className += SPACE_CHAR + options.positionFixedClass\n      }\n    } else {\n      posFixedEl.className = posFixedEl.className.replace(SPACE_CHAR + options.positionFixedClass, '')\n    }\n  }\n\n  /**\n   * Get top position of heading\n   * @param {HTMLElement} obj\n   * @return {int} position\n   */\n  function getHeadingTopPos (obj) {\n    let position = 0\n    if (obj !== null) {\n      position = obj.offsetTop\n      if (options.hasInnerContainers) { position += getHeadingTopPos(obj.offsetParent) }\n    }\n    return position\n  }\n\n  /**\n   * Update className only when changed.\n   * @param {HTMLElement} obj\n   * @param {string} className\n   * @return {HTMLElement} obj\n   */\n  function updateClassname (obj, className) {\n    if (obj && obj.className !== className) {\n      obj.className = className\n    }\n    return obj\n  }\n\n  /**\n   * Update TOC highlighting and collapsed groupings.\n   */\n  function updateToc (headingsArray) {\n    // Add fixed class at offset\n    if (options.positionFixedSelector) {\n      updateFixedSidebarClass()\n    }\n\n    // Get the top most heading currently visible on the page so we know what to highlight.\n    const headings = headingsArray\n    // Using some instead of each so that we can escape early.\n    if (currentlyHighlighting &&\n      !!tocElement &&\n      headings.length > 0) {\n      const topHeader = getTopHeader(headings)\n\n      const oldActiveTocLink = tocElement.querySelector(`.${options.activeLinkClass}`)\n      const activeTocLink = tocElement\n        .querySelector(`.${options.linkClass}.node-name--${topHeader.nodeName}[href=\"${options.basePath}#${topHeader.id.replace(/([ #;&,.+*~':\"!^$[\\]()=>|/\\\\@])/g, '\\\\$1')}\"]`)\n      // Performance improvement to only change the classes\n      // for the toc if a new link should be highlighted.\n      if (oldActiveTocLink === activeTocLink) {\n        return\n      }\n\n      // Remove the active class from the other tocLinks.\n      const tocLinks = tocElement\n        .querySelectorAll(`.${options.linkClass}`)\n      forEach.call(tocLinks, (tocLink) => {\n        updateClassname(tocLink, tocLink.className.replace(SPACE_CHAR + options.activeLinkClass, ''))\n      })\n      const tocLis = tocElement\n        .querySelectorAll(`.${options.listItemClass}`)\n      forEach.call(tocLis, (tocLi) => {\n        updateClassname(tocLi, tocLi.className.replace(SPACE_CHAR + options.activeListItemClass, ''))\n      })\n\n      // Add the active class to the active tocLink.\n      if (activeTocLink && activeTocLink.className.indexOf(options.activeLinkClass) === -1) {\n        activeTocLink.className += SPACE_CHAR + options.activeLinkClass\n      }\n      const li = activeTocLink?.parentNode\n      if (li && li.className.indexOf(options.activeListItemClass) === -1) {\n        li.className += SPACE_CHAR + options.activeListItemClass\n      }\n\n      const tocLists = tocElement\n        .querySelectorAll(`.${options.listClass}.${options.collapsibleClass}`)\n\n      // Collapse the other collapsible lists.\n      forEach.call(tocLists, (list) => {\n        if (list.className.indexOf(options.isCollapsedClass) === -1) {\n          list.className += SPACE_CHAR + options.isCollapsedClass\n        }\n      })\n\n      // Expand the active link's collapsible list and its sibling if applicable.\n      if (activeTocLink?.nextSibling && activeTocLink.nextSibling.className.indexOf(options.isCollapsedClass) !== -1) {\n        updateClassname(activeTocLink.nextSibling, activeTocLink.nextSibling.className.replace(SPACE_CHAR + options.isCollapsedClass, ''))\n      }\n      removeCollapsedFromParents(activeTocLink?.parentNode.parentNode)\n    }\n  }\n\n  /**\n   * Remove collapsed class from parent elements.\n   * @param {HTMLElement} element\n   * @return {HTMLElement}\n   */\n  function removeCollapsedFromParents (element) {\n    if (element && element.className.indexOf(options.collapsibleClass) !== -1 && element.className.indexOf(options.isCollapsedClass) !== -1) {\n      updateClassname(element, element.className.replace(SPACE_CHAR + options.isCollapsedClass, ''))\n      return removeCollapsedFromParents(element.parentNode.parentNode)\n    }\n    return element\n  }\n\n  /**\n   * Disable TOC Animation when a link is clicked.\n   * @param {Event} event\n   */\n  function disableTocAnimation (event) {\n    const target = event.target || event.srcElement\n    if (typeof target.className !== 'string' || target.className.indexOf(options.linkClass) === -1) {\n      return\n    }\n    // Bind to tocLink clicks to temporarily disable highlighting\n    // while smoothScroll is animating.\n    currentlyHighlighting = false\n  }\n\n  /**\n   * Enable TOC Animation.\n   */\n  function enableTocAnimation () {\n    currentlyHighlighting = true\n  }\n\n  /**\n   * Return currently highlighting status.\n   */\n  function getCurrentlyHighlighting () {\n    return currentlyHighlighting\n  }\n\n  function getScrollTop () {\n    // If a fixed content container was set\n    let top\n    if (options.scrollContainer && document.querySelector(options.scrollContainer)) {\n      top = document.querySelector(options.scrollContainer).scrollTop\n    } else {\n      top = document.documentElement.scrollTop || body.scrollTop\n    }\n    return top\n  }\n\n  function getTopHeader (headings, scrollTop = getScrollTop()) {\n    let topHeader\n    some.call(headings, (heading, i) => {\n      if (getHeadingTopPos(heading) > scrollTop + options.headingsOffset + 10) {\n        // Don't allow negative index value.\n        const index = (i === 0) ? i : i - 1\n        topHeader = headings[index]\n        return true\n      }\n      if (i === headings.length - 1) {\n        // This allows scrolling for the last heading on the page.\n        topHeader = headings[headings.length - 1]\n        return true\n      }\n    })\n    return topHeader\n  }\n\n  function updateUrlHashForHeader (headingsArray) {\n    const scrollTop = getScrollTop()\n    const topHeader = getTopHeader(headingsArray, scrollTop)\n    if (!topHeader || scrollTop < 5) {\n      if (!(window.location.hash === '#' || window.location.hash === '')) {\n        window.history.pushState(null, null, '#')\n      }\n    } else if (topHeader) {\n      const newHash = `#${topHeader.id}`\n      if (window.location.hash !== newHash) {\n        window.history.pushState(null, null, newHash)\n      }\n    }\n  }\n\n  return {\n    enableTocAnimation,\n    disableTocAnimation,\n    render,\n    updateToc,\n    getCurrentlyHighlighting,\n    getTopHeader,\n    getScrollTop,\n    updateUrlHashForHeader\n  }\n}\n", "export default {\n  // Where to render the table of contents.\n  tocSelector: '.js-toc',\n  // Or, you can pass in a DOM node instead\n  tocElement: null,\n  // Where to grab the headings to build the table of contents.\n  contentSelector: '.js-toc-content',\n  // Or, you can pass in a DOM node instead\n  contentElement: null,\n  // Which headings to grab inside of the contentSelector element.\n  headingSelector: 'h1, h2, h3',\n  // Headings that match the ignoreSelector will be skipped.\n  ignoreSelector: '.js-toc-ignore',\n  // For headings inside relative or absolute positioned\n  // containers within content.\n  hasInnerContainers: false,\n  // Main class to add to links.\n  linkClass: 'toc-link',\n  // Extra classes to add to links.\n  extraLinkClasses: '',\n  // Class to add to active links,\n  // the link corresponding to the top most heading on the page.\n  activeLinkClass: 'is-active-link',\n  // Main class to add to lists.\n  listClass: 'toc-list',\n  // Extra classes to add to lists.\n  extraListClasses: '',\n  // Class that gets added when a list should be collapsed.\n  isCollapsedClass: 'is-collapsed',\n  // Class that gets added when a list should be able\n  // to be collapsed but isn't necessarily collapsed.\n  collapsibleClass: 'is-collapsible',\n  // Class to add to list items.\n  listItemClass: 'toc-list-item',\n  // Class to add to active list items.\n  activeListItemClass: 'is-active-li',\n  // How many heading levels should not be collapsed.\n  // For example, number 6 will show everything since\n  // there are only 6 heading levels and number 0 will collapse them all.\n  // The sections that are hidden will open\n  // and close as you scroll to headings within them.\n  collapseDepth: 0,\n  // Smooth scrolling enabled.\n  scrollSmooth: true,\n  // Smooth scroll duration.\n  scrollSmoothDuration: 420,\n  // Smooth scroll offset.\n  scrollSmoothOffset: 0,\n  // Callback for scroll end.\n  scrollEndCallback: function (e) {},\n  // Headings offset between the headings and the top of\n  // the document (this is meant for minor adjustments).\n  headingsOffset: 1,\n  // Timeout between events firing to make sure it's\n  // not too rapid (for performance reasons).\n  throttleTimeout: 50,\n  // Element to add the positionFixedClass to.\n  positionFixedSelector: null,\n  // Fixed position class to add to make sidebar fixed after scrolling\n  // down past the fixedSidebarOffset.\n  positionFixedClass: 'is-position-fixed',\n  // fixedSidebarOffset can be any number but by default is set\n  // to auto which sets the fixedSidebarOffset to the sidebar\n  // element's offsetTop from the top of the document on init.\n  fixedSidebarOffset: 'auto',\n  // includeHtml can be set to true to include the HTML markup from the\n  // heading node instead of just including the innerText.\n  includeHtml: false,\n  // includeTitleTags automatically sets the html title tag of the link\n  // to match the title. This can be useful for SEO purposes or\n  // when truncating titles.\n  includeTitleTags: false,\n  // onclick function to apply to all links in toc. will be called with\n  // the event as the first parameter, and this can be used to stop,\n  // propagation, prevent default or perform action\n  onClick: function (e) {},\n  // orderedList can be set to false to generate unordered lists (ul)\n  // instead of ordered lists (ol)\n  orderedList: true,\n  // If there is a fixed article scroll container, set to calculate offset.\n  scrollContainer: null,\n  // prevent ToC DOM rendering if it's already rendered by an external system.\n  skipRendering: false,\n  // Optional callback to change heading labels.\n  // For example it can be used to cut down and put ellipses on multiline headings you deem too long.\n  // Called each time a heading is parsed. Expects a string and returns the modified label to display.\n  // Additionally, the attribute `data-heading-label` may be used on a heading to specify\n  // a shorter string to be used in the TOC.\n  // function (string) => string\n  headingLabelCallback: false,\n  // ignore headings that are hidden in DOM\n  ignoreHiddenElements: false,\n  // Optional callback to modify properties of parsed headings.\n  // The heading element is passed in node parameter and information\n  // parsed by default parser is provided in obj parameter.\n  // Function has to return the same or modified obj.\n  // The heading will be excluded from TOC if nothing is returned.\n  // function (object, HTMLElement) => object | void\n  headingObjectCallback: null,\n  // Set the base path, useful if you use a `base` tag in `head`.\n  basePath: '',\n  // Only takes affect when `tocSelector` is scrolling,\n  // keep the toc scroll position in sync with the content.\n  disableTocScrollSync: false,\n  // Offset for the toc scroll (top) position when scrolling the page.\n  // Only effective if `disableTocScrollSync` is false.\n  tocScrollOffset: 0,\n  // Enable the URL hash to update with the proper heading ID as\n  // a user scrolls the page.\n  enableUrlHashUpdateOnScroll: false\n}\n", "/**\n * This file is responsible for parsing the content from the DOM and making\n * sure data is nested properly.\n *\n * @author Tim Scanlin\n */\n\nexport default function parseContent (options) {\n  const reduce = [].reduce\n\n  /**\n   * Get the last item in an array and return a reference to it.\n   * @param {Array} array\n   * @return {Object}\n   */\n  function getLastItem (array) {\n    return array[array.length - 1]\n  }\n\n  /**\n   * Get heading level for a heading dom node.\n   * @param {HTMLElement} heading\n   * @return {Number}\n   */\n  function getHeadingLevel (heading) {\n    return +heading.nodeName.toUpperCase().replace('H', '')\n  }\n\n  /**\n   * Determine whether the object is an HTML Element.\n   * Also works inside iframes. HTML Elements might be created by the parent document.\n   * @param {Object} maybeElement\n   * @return {Number}\n   */\n  function isHTMLElement (maybeElement) {\n    try {\n      return (\n        maybeElement instanceof window.HTMLElement ||\n        maybeElement instanceof window.parent.HTMLElement\n      )\n    } catch (e) {\n      return maybeElement instanceof window.HTMLElement\n    }\n  }\n\n  /**\n   * Get important properties from a heading element and store in a plain object.\n   * @param {HTMLElement} heading\n   * @return {Object}\n   */\n  function getHeadingObject (heading) {\n    // each node is processed twice by this method because nestHeadingsArray() and addNode() calls it\n    // first time heading is real DOM node element, second time it is obj\n    // that is causing problem so I am processing only original DOM node\n    if (!isHTMLElement(heading)) return heading\n\n    if (options.ignoreHiddenElements && (!heading.offsetHeight || !heading.offsetParent)) {\n      return null\n    }\n\n    const headingLabel = heading.getAttribute('data-heading-label') ||\n      (options.headingLabelCallback ? String(options.headingLabelCallback(heading.innerText)) : (heading.innerText || heading.textContent).trim())\n    const obj = {\n      id: heading.id,\n      children: [],\n      nodeName: heading.nodeName,\n      headingLevel: getHeadingLevel(heading),\n      textContent: headingLabel\n    }\n\n    if (options.includeHtml) {\n      obj.childNodes = heading.childNodes\n    }\n\n    if (options.headingObjectCallback) {\n      return options.headingObjectCallback(obj, heading)\n    }\n\n    return obj\n  }\n\n  /**\n   * Add a node to the nested array.\n   * @param {Object} node\n   * @param {Array} nest\n   * @return {Array}\n   */\n  function addNode (node, nest) {\n    const obj = getHeadingObject(node)\n    const level = obj.headingLevel\n    let array = nest\n    let lastItem = getLastItem(array)\n    const lastItemLevel = lastItem\n      ? lastItem.headingLevel\n      : 0\n    let counter = level - lastItemLevel\n\n    while (counter > 0) {\n      lastItem = getLastItem(array)\n      // Handle case where there are multiple h5+ in a row.\n      if (lastItem && level === lastItem.headingLevel) {\n        break\n      } else if (lastItem && lastItem.children !== undefined) {\n        array = lastItem.children\n      }\n      counter--\n    }\n\n    if (level >= options.collapseDepth) {\n      obj.isCollapsed = true\n    }\n\n    array.push(obj)\n    return array\n  }\n\n  /**\n   * Select headings in content area, exclude any selector in options.ignoreSelector\n   * @param {HTMLElement} contentElement\n   * @param {Array} headingSelector\n   * @return {Array}\n   */\n  function selectHeadings (contentElement, headingSelector) {\n    let selectors = headingSelector\n    if (options.ignoreSelector) {\n      selectors = headingSelector.split(',')\n        .map(function mapSelectors (selector) {\n          return `${selector.trim()}:not(${options.ignoreSelector})`\n        })\n    }\n    try {\n      return contentElement.querySelectorAll(selectors)\n    } catch (e) {\n      console.warn(`Headers not found with selector: ${selectors}`); // eslint-disable-line\n      return null\n    }\n  }\n\n  /**\n   * Nest headings array into nested arrays with 'children' property.\n   * @param {Array} headingsArray\n   * @return {Object}\n   */\n  function nestHeadingsArray (headingsArray) {\n    return reduce.call(headingsArray, function reducer (prev, curr) {\n      const currentHeading = getHeadingObject(curr)\n      if (currentHeading) {\n        addNode(currentHeading, prev.nest)\n      }\n      return prev\n    }, {\n      nest: []\n    })\n  }\n\n  return {\n    nestHeadingsArray,\n    selectHeadings\n  }\n}\n", "/* eslint no-var: off */\n/* globals location, requestAnimationFrame */\n\nexport default function initSmoothScrolling (options) {\n  // if (isCssSmoothSCrollSupported()) { return }\n\n  var duration = options.duration\n  var offset = options.offset\n  if (typeof window === 'undefined' || typeof location === 'undefined') return\n\n  var pageUrl = location.hash\n    ? stripHash(location.href)\n    : location.href\n\n  delegatedLinkHijacking()\n\n  function delegatedLinkHijacking () {\n    document.body.addEventListener('click', onClick, false)\n\n    function onClick (e) {\n      if (\n        !isInPageLink(e.target) ||\n        e.target.className.indexOf('no-smooth-scroll') > -1 ||\n        (e.target.href.charAt(e.target.href.length - 2) === '#' &&\n        e.target.href.charAt(e.target.href.length - 1) === '!') ||\n        e.target.className.indexOf(options.linkClass) === -1) {\n        return\n      }\n\n      // Don't prevent default or hash doesn't change.\n      // e.preventDefault()\n\n      jump(e.target.hash, {\n        duration,\n        offset,\n        callback: function () {\n          setFocus(e.target.hash)\n        }\n      })\n    }\n  }\n\n  function isInPageLink (n) {\n    return n.tagName.toLowerCase() === 'a' &&\n      (n.hash.length > 0 || n.href.charAt(n.href.length - 1) === '#') &&\n      (stripHash(n.href) === pageUrl || stripHash(n.href) + '#' === pageUrl)\n  }\n\n  function stripHash (url) {\n    return url.slice(0, url.lastIndexOf('#'))\n  }\n\n  // function isCssSmoothSCrollSupported () {\n  //   return 'scrollBehavior' in document.documentElement.style\n  // }\n\n  // Adapted from:\n  // https://www.nczonline.net/blog/2013/01/15/fixing-skip-to-content-links/\n  function setFocus (hash) {\n    var element = document.getElementById(hash.substring(1))\n\n    if (element) {\n      if (!/^(?:a|select|input|button|textarea)$/i.test(element.tagName)) {\n        element.tabIndex = -1\n      }\n\n      element.focus()\n    }\n  }\n}\n\nfunction jump (target, options) {\n  var start = window.pageYOffset\n  var opt = {\n    duration: options.duration,\n    offset: options.offset || 0,\n    callback: options.callback,\n    easing: options.easing || easeInOutQuad\n  }\n  // This makes ids that start with a number work: ('[id=\"' + decodeURI(target).split('#').join('') + '\"]')\n  // DecodeURI for nonASCII hashes, they was encoded, but id was not encoded, it lead to not finding the tgt element by id.\n  // And this is for IE: document.body.scrollTop\n  // Handle decoded and non-decoded URIs since sometimes URLs automatically transform them (support for internation chars).\n  var tgt = document.querySelector('[id=\"' + decodeURI(target).split('#').join('') + '\"]') ||\n    document.querySelector('[id=\"' + (target).split('#').join('') + '\"]')\n  var distance = typeof target === 'string'\n    ? opt.offset + (\n      target\n        ? (tgt && tgt.getBoundingClientRect().top) || 0 // handle non-existent links better.\n        : -(document.documentElement.scrollTop || document.body.scrollTop))\n    : target\n  var duration = typeof opt.duration === 'function'\n    ? opt.duration(distance)\n    : opt.duration\n  var timeStart\n  var timeElapsed\n\n  requestAnimationFrame(function (time) { timeStart = time; loop(time) })\n  function loop (time) {\n    timeElapsed = time - timeStart\n\n    window.scrollTo(0, opt.easing(timeElapsed, start, distance, duration))\n\n    if (timeElapsed < duration) { requestAnimationFrame(loop) } else { end() }\n  }\n\n  function end () {\n    window.scrollTo(0, start + distance)\n\n    if (typeof opt.callback === 'function') { opt.callback() }\n  }\n\n  // Robert Penner's easeInOutQuad - http://robertpenner.com/easing/\n  function easeInOutQuad (t, b, c, d) {\n    t /= d / 2\n    if (t < 1) return c / 2 * t * t + b\n    t--\n    return -c / 2 * (t * (t - 2) - 1) + b\n  }\n}\n", "/* eslint no-var: off */\n\nconst SCROLL_LEEWAY = 30\nexport default function updateTocScroll (options) {\n  var toc = options.tocElement || document.querySelector(options.tocSelector)\n  if (toc && toc.scrollHeight > toc.clientHeight) {\n    var activeItem = toc.querySelector('.' + options.activeListItemClass)\n    if (activeItem) {\n      // Determine container top and bottom\n      var cTop = toc.scrollTop\n      var cBottom = cTop + toc.clientHeight\n\n      // Determine element top and bottom\n      var eTop = activeItem.offsetTop\n      var eBottom = eTop + activeItem.clientHeight\n\n      // Check if out of view\n      // Above scroll view\n      if (eTop < cTop + options.tocScrollOffset) {\n        toc.scrollTop -= (cTop - eTop) + options.tocScrollOffset\n      // Below scroll view\n      } else if (eBottom > cBottom - options.tocScrollOffset - SCROLL_LEEWAY) {\n        toc.scrollTop += (eBottom - cBottom) + options.tocScrollOffset + (2 * SCROLL_LEEWAY)\n      }\n    }\n  }\n}\n", "/* eslint no-var: off */\n/**\n * Tocbot\n * Tocbot creates a table of contents based on HTML headings on a page,\n * this allows users to easily jump to different sections of the document.\n * Tocbot was inspired by tocify (http://gregfranko.com/jquery.tocify.js/).\n * The main differences are that it works natively without any need for jquery or jquery UI).\n *\n * @author Tim Scanlin\n */\n\nimport BuildHtml from './build-html.js'\nimport defaultOptions from './default-options.js'\nimport ParseContent from './parse-content.js'\nimport initSmoothScrolling from './scroll-smooth/index.js'\nimport updateTocScroll from './update-toc-scroll.js'\n\n// For testing purposes.\nexport let _options = {} // Object to store current options.\nexport let _buildHtml\nexport let _parseContent\nexport let _headingsArray\nexport let _scrollListener\n\nlet clickListener\n\n/**\n * Initialize tocbot.\n * @param {object} customOptions\n */\nexport function init (customOptions) {\n  // Merge defaults with user options.\n  // Set to options variable at the top.\n  _options = extend(defaultOptions, customOptions || {})\n\n  // Init smooth scroll if enabled (default).\n  if (_options.scrollSmooth) {\n    _options.duration = _options.scrollSmoothDuration\n    _options.offset = _options.scrollSmoothOffset\n\n    initSmoothScrolling(_options)\n  }\n\n  // Pass options to these modules.\n  _buildHtml = BuildHtml(_options)\n  _parseContent = ParseContent(_options)\n\n  // Destroy it if it exists first.\n  destroy()\n\n  const contentElement = getContentElement(_options)\n  if (contentElement === null) {\n    return\n  }\n\n  const tocElement = getTocElement(_options)\n  if (tocElement === null) {\n    return\n  }\n\n  // Get headings array.\n  _headingsArray = _parseContent.selectHeadings(\n    contentElement,\n    _options.headingSelector\n  )\n\n  // Return if no headings are found.\n  if (_headingsArray === null) {\n    return\n  }\n\n  // Build nested headings array.\n  const nestedHeadingsObj = _parseContent.nestHeadingsArray(_headingsArray)\n  const nestedHeadings = nestedHeadingsObj.nest\n\n  // Render.\n  if (!_options.skipRendering) {\n    _buildHtml.render(tocElement, nestedHeadings)\n  } else {\n    // No need to attach listeners if skipRendering is true, this was causing errors.\n    return this\n  }\n\n  // Update Sidebar and bind listeners.\n  _scrollListener = throttle((e) => {\n    _buildHtml.updateToc(_headingsArray)\n    !_options.disableTocScrollSync && updateTocScroll(_options)\n\n    if (_options.enableUrlHashUpdateOnScroll) {\n      const enableUpdatingHash = _buildHtml.getCurrentlyHighlighting()\n      enableUpdatingHash && _buildHtml.updateUrlHashForHeader(_headingsArray)\n    }\n\n    const isTop =\n      e?.target?.scrollingElement &&\n      e.target.scrollingElement.scrollTop === 0\n    if ((e && (e.eventPhase === 0 || e.currentTarget === null)) || isTop) {\n      _buildHtml.updateToc(_headingsArray)\n      if (_options.scrollEndCallback) {\n        _options.scrollEndCallback(e)\n      }\n    }\n  }, _options.throttleTimeout)\n  _scrollListener()\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener('scroll', _scrollListener, false)\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener('resize', _scrollListener, false)\n  } else {\n    document.addEventListener('scroll', _scrollListener, false)\n    document.addEventListener('resize', _scrollListener, false)\n  }\n\n  // Bind click listeners to disable animation.\n  let timeout = null\n  clickListener = throttle((event) => {\n    if (_options.scrollSmooth) {\n      _buildHtml.disableTocAnimation(event)\n    }\n    _buildHtml.updateToc(_headingsArray)\n    // Timeout to re-enable the animation.\n    timeout && clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      _buildHtml.enableTocAnimation()\n    }, _options.scrollSmoothDuration)\n  }, _options.throttleTimeout)\n\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener('click', clickListener, false)\n  } else {\n    document.addEventListener('click', clickListener, false)\n  }\n}\n\n/**\n * Destroy tocbot.\n */\nexport function destroy () {\n  const tocElement = getTocElement(_options)\n  if (tocElement === null) {\n    return\n  }\n\n  if (!_options.skipRendering) {\n    // Clear HTML.\n    if (tocElement) {\n      tocElement.innerHTML = ''\n    }\n  }\n\n  // Remove event listeners.\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .removeEventListener('scroll', _scrollListener, false)\n    document\n      .querySelector(_options.scrollContainer)\n      .removeEventListener('resize', _scrollListener, false)\n    if (_buildHtml) {\n      document\n        .querySelector(_options.scrollContainer)\n        .removeEventListener('click', clickListener, false)\n    }\n  } else {\n    document.removeEventListener('scroll', _scrollListener, false)\n    document.removeEventListener('resize', _scrollListener, false)\n    if (_buildHtml) {\n      document.removeEventListener('click', clickListener, false)\n    }\n  }\n}\n\n/**\n * Refresh tocbot.\n */\nexport function refresh (customOptions) {\n  destroy()\n  init(customOptions || _options)\n}\n\n// From: https://github.com/Raynos/xtend\nconst hasOwnProp = Object.prototype.hasOwnProperty\nfunction extend (...args) {\n  const target = {}\n  for (let i = 0; i < args.length; i++) {\n    const source = args[i]\n    for (const key in source) {\n      if (hasOwnProp.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\n// From: https://remysharp.com/2010/07/21/throttling-function-calls\nfunction throttle (fn, threshold, scope) {\n  threshold || (threshold = 250)\n  let last\n  let deferTimer\n  return function (...args) {\n    const context = scope || this\n    const now = +new Date()\n    if (last && now < last + threshold) {\n      // hold on to it\n      clearTimeout(deferTimer)\n      deferTimer = setTimeout(() => {\n        last = now\n        fn.apply(context, args)\n      }, threshold)\n    } else {\n      last = now\n      fn.apply(context, args)\n    }\n  }\n}\n\nfunction getContentElement (options) {\n  try {\n    return (\n      options.contentElement || document.querySelector(options.contentSelector)\n    )\n  } catch (e) {\n    console.warn(`Contents element not found: ${options.contentSelector}`) // eslint-disable-line\n    return null\n  }\n}\n\nfunction getTocElement (options) {\n  try {\n    return options.tocElement || document.querySelector(options.tocSelector)\n  } catch (e) {\n    console.warn(`TOC element not found: ${options.tocSelector}`) // eslint-disable-line\n    return null\n  }\n}\n\n// Add default export for easier use.\nconst tocbot = {\n  _options,\n  _buildHtml,\n  _parseContent,\n  init,\n  destroy,\n  refresh\n}\n\nexport default tocbot\n", "import { destroy, init, refresh } from './src/js/index-esm.js'\nconst tocbot = { destroy, init, refresh }\n\nexport { destroy, init, refresh }\nexport default tocbot\n", "/*\n * table of contents initialistation\n*/\nimport tocbot from 'tocbot';\n\nexport function initialiseTocbot() {\n  tocbot.init({\n    tocSelector: '.toc',\n    contentSelector: '.article',\n    hasInnerContainers: true\n  })\n\n  // safari fix  - toc not showing without a forced repaint - todo - retest\n  /* todo\n  window.onload = function() {\n    const toc = document.querySelector('.table-of-contents');\n    if (toc) {\n        // Force a repaint by triggering GPU acceleration\n        toc.style.transform = 'translateZ(0)';\n    }\n  };\n  */\n}\n/* \n * toggle mobile toc when toc icon is clicked\n*/\nexport function toggleToc() {\n  const tocButton = document.querySelector(\".toc-toggle\");\n  const tableOfContents = document.querySelector(\".table-of-contents\");\n\n  if (!tableOfContents) {\n    return;\n  }\n\n  function toggleTableOfContents(){\n      tableOfContents.classList.toggle(\"toc-open\");\n  }\n  if (!tocButton) {\n    return;\n  }\n\n  window.addEventListener('click', function(e){\n    let tocOpenElement = null;\n    tocOpenElement = tableOfContents.querySelector(\".toc-open\");\n\n    if (tocOpenElement && tocOpenElement.contains(e.target)) {\n        return;\n    }\n\n    // Close TOC when clicking outside the TOC\n    if (!tableOfContents.contains(e.target) && !tocButton.contains(e.target) && tableOfContents.classList.contains(\"toc-open\")) {\n        toggleTableOfContents();\n    }\n  });\n\n  /* Toggle mobile toc */\n  tocButton.addEventListener('click', toggleTableOfContents, false);\n}\n\n/*\n * update reading progress based on scroll position\n*/\nexport function updateTocReadingProgress() {\n  const tocToggleButton = document.querySelector('.toc-toggle');\n  if (!tocToggleButton) {\n    return;\n  }\n\n  function updateProgress() {\n    const totalHeight = document.body.clientHeight;\n    const windowHeight = document.documentElement.clientHeight;\n    const position = window.scrollY;\n    const progress = position / (totalHeight - windowHeight)*100;\n    tocToggleButton.setAttribute('data-progress', `${progress.toFixed(0)}%`);\n\n    // this is used to update the circular progress bar show around the toc button\n    tocToggleButton.style.setProperty(\n    '--conic-gradient',\n    `var(--reading-progress-color) 0deg 0%,  \n      var(--reading-progress-color) 0deg ${ progress.toFixed(3) }%,\n      var(--background-color) 0deg ${ 1 - progress.toFixed(3) }%,\n      var(--background-color) 0deg 360deg`,\n    );\n    requestAnimationFrame(updateProgress);\n  }\n  requestAnimationFrame(updateProgress);\n}\n", "import { demoOptionsPicker } from './demo.js';\nimport { copyLink } from './copy-link.js';\nimport { darkModeToggle } from './dark-mode-toggle.js';\nimport { enrolDialog } from './enrol-dialog.js';\nimport { lightbox } from './lightbox.js';\nimport { createMainNavMenu, mainNavMenuToggle, sidebarToggle } from './navigation.js'\nimport { pagination } from './pagination.js';\nimport { initialiseTocbot, toggleToc, updateTocReadingProgress } from './table-of-contents.js';\nimport { Prism } from 'prismjs';\nimport 'prismjs/components/prism-javascript.min.js';\nimport 'prismjs/components/prism-nginx.js';\nimport 'prismjs/components/prism-bash.min.js';\nimport 'prismjs/plugins/command-line/prism-command-line.js';\n\ndemoOptionsPicker();\ncopyLink();\ndarkModeToggle();\nenrolDialog();\nlightbox();\ncreateMainNavMenu();\nmainNavMenuToggle();\nsidebarToggle();\npagination(false);\ninitialiseTocbot();\ntoggleToc();\nupdateTocReadingProgress();\n", "Prism.languages.javascript=Prism.languages.extend(\"clike\",{\"class-name\":[Prism.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:{pattern:RegExp(\"(^|[^\\\\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\\\\dA-Fa-f]+(?:_[\\\\dA-Fa-f]+)*n?|\\\\d+(?:_\\\\d+)*n|(?:\\\\d+(?:_\\\\d+)*(?:\\\\.(?:\\\\d+(?:_\\\\d+)*)?)?|\\\\.\\\\d+(?:_\\\\d+)*)(?:[Ee][+-]?\\\\d+(?:_\\\\d+)*)?)(?![\\\\w$])\"),lookbehind:!0},operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),Prism.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:RegExp(\"((?:^|[^$\\\\w\\\\xA0-\\\\uFFFF.\\\"'\\\\])\\\\s]|\\\\b(?:return|yield))\\\\s*)/(?:(?:\\\\[(?:[^\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.)*\\\\]|\\\\\\\\.|[^/\\\\\\\\\\\\[\\r\\n])+/[dgimyus]{0,7}|(?:\\\\[(?:[^[\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.|\\\\[(?:[^[\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.|\\\\[(?:[^[\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.)*\\\\])*\\\\])*\\\\]|\\\\\\\\.|[^/\\\\\\\\\\\\[\\r\\n])+/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\\\\s|/\\\\*(?:[^*]|\\\\*(?!/))*\\\\*/)*(?:$|[\\r\\n,.;:})\\\\]]|//))\"),lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),Prism.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),Prism.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined(\"script\",\"javascript\"),Prism.languages.markup.tag.addAttribute(\"on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)\",\"javascript\")),Prism.languages.js=Prism.languages.javascript;", "(function (Prism) {\n\n\tvar variable = /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i;\n\n\tPrism.languages.nginx = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[\\s{};])#.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'directive': {\n\t\t\tpattern: /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'escape': {\n\t\t\t\t\t\t\tpattern: /\\\\[\"'\\\\nrt]/,\n\t\t\t\t\t\t\talias: 'entity'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'variable': variable\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'comment': {\n\t\t\t\t\tpattern: /(\\s)#.*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /^\\S+/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\n\t\t\t\t// other patterns\n\n\t\t\t\t'boolean': {\n\t\t\t\t\tpattern: /(\\s)(?:off|on)(?!\\S)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'number': {\n\t\t\t\t\tpattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'variable': variable\n\t\t\t}\n\t\t},\n\t\t'punctuation': /[{};]/\n\t};\n\n}(Prism));\n", "!function(e){var t=\"\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b\",a={pattern:/(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,lookbehind:!0,alias:\"punctuation\",inside:null},n={bash:a,environment:{pattern:RegExp(\"\\\\$\"+t),alias:\"constant\"},variable:[{pattern:/\\$?\\(\\([\\s\\S]+?\\)\\)/,greedy:!0,inside:{variable:[{pattern:/(^\\$\\(\\([\\s\\S]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,greedy:!0,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},{pattern:/\\$\\{[^}]+\\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,punctuation:/[\\[\\]]/,environment:{pattern:RegExp(\"(\\\\{)\"+t),lookbehind:!0,alias:\"constant\"}}},/\\$(?:\\w+|[#?*!@$])/],entity:/\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\\s*\\/.*/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\$])#.*/,lookbehind:!0},\"function-name\":[{pattern:/(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,lookbehind:!0,alias:\"function\"},{pattern:/\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,alias:\"function\"}],\"for-or-select\":{pattern:/(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,alias:\"variable\",lookbehind:!0},\"assign-left\":{pattern:/(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,inside:{environment:{pattern:RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\"+t),lookbehind:!0,alias:\"constant\"}},alias:\"variable\",lookbehind:!0},parameter:{pattern:/(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,alias:\"variable\",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,lookbehind:!0,greedy:!0,inside:n},{pattern:/((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,lookbehind:!0,greedy:!0,inside:{bash:a}},{pattern:/(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,lookbehind:!0,greedy:!0,inside:n},{pattern:/(^|[^$\\\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,greedy:!0,inside:{entity:n.entity}}],environment:{pattern:RegExp(\"\\\\$?\"+t),alias:\"constant\"},variable:n.variable,function:{pattern:/(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,lookbehind:!0,alias:\"class-name\"},boolean:{pattern:/(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,lookbehind:!0},\"file-descriptor\":{pattern:/\\B&\\d\\b/,alias:\"important\"},operator:{pattern:/\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,inside:{\"file-descriptor\":{pattern:/^\\d/,alias:\"important\"}}},punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,number:{pattern:/(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,lookbehind:!0}},a.inside=e.languages.bash;for(var s=[\"comment\",\"function-name\",\"for-or-select\",\"assign-left\",\"parameter\",\"string\",\"environment\",\"function\",\"keyword\",\"builtin\",\"boolean\",\"file-descriptor\",\"operator\",\"punctuation\",\"number\"],o=n.variable[1].inside,i=0;i<s.length;i++)o[s[i]]=e.languages.bash[s[i]];e.languages.sh=e.languages.bash,e.languages.shell=e.languages.bash}(Prism);", "(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tvar CLASS_PATTERN = /(?:^|\\s)command-line(?:\\s|$)/;\n\tvar PROMPT_CLASS = 'command-line-prompt';\n\n\t/** @type {(str: string, prefix: string) => boolean} */\n\tvar startsWith = ''.startsWith\n\t\t? function (s, p) { return s.startsWith(p); }\n\t\t: function (s, p) { return s.indexOf(p) === 0; };\n\n\t// Support for IE11 that has no endsWith()\n\t/** @type {(str: string, suffix: string) => boolean} */\n\tvar endsWith = ''.endsWith\n\t\t? function (str, suffix) {\n\t\t\treturn str.endsWith(suffix);\n\t\t}\n\t\t: function (str, suffix) {\n\t\t\tvar len = str.length;\n\t\t\treturn str.substring(len - suffix.length, len) === suffix;\n\t\t};\n\n\t/**\n\t * Returns whether the given hook environment has a command line info object.\n\t *\n\t * @param {any} env\n\t * @returns {boolean}\n\t */\n\tfunction hasCommandLineInfo(env) {\n\t\tvar vars = env.vars = env.vars || {};\n\t\treturn 'command-line' in vars;\n\t}\n\t/**\n\t * Returns the command line info object from the given hook environment.\n\t *\n\t * @param {any} env\n\t * @returns {CommandLineInfo}\n\t *\n\t * @typedef CommandLineInfo\n\t * @property {boolean} [complete]\n\t * @property {number} [numberOfLines]\n\t * @property {string[]} [outputLines]\n\t */\n\tfunction getCommandLineInfo(env) {\n\t\tvar vars = env.vars = env.vars || {};\n\t\treturn vars['command-line'] = vars['command-line'] || {};\n\t}\n\n\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\tvar commandLine = getCommandLineInfo(env);\n\n\t\tif (commandLine.complete || !env.code) {\n\t\t\tcommandLine.complete = true;\n\t\t\treturn;\n\t\t}\n\n\t\t// Works only for <code> wrapped inside <pre> (not inline).\n\t\tvar pre = env.element.parentElement;\n\t\tif (!pre || !/pre/i.test(pre.nodeName) || // Abort only if neither the <pre> nor the <code> have the class\n\t\t\t(!CLASS_PATTERN.test(pre.className) && !CLASS_PATTERN.test(env.element.className))) {\n\t\t\tcommandLine.complete = true;\n\t\t\treturn;\n\t\t}\n\n\t\t// The element might be highlighted multiple times, so we just remove the previous prompt\n\t\tvar existingPrompt = env.element.querySelector('.' + PROMPT_CLASS);\n\t\tif (existingPrompt) {\n\t\t\texistingPrompt.remove();\n\t\t}\n\n\t\tvar codeLines = env.code.split('\\n');\n\n\t\tcommandLine.numberOfLines = codeLines.length;\n\t\t/** @type {string[]} */\n\t\tvar outputLines = commandLine.outputLines = [];\n\n\t\tvar outputSections = pre.getAttribute('data-output');\n\t\tvar outputFilter = pre.getAttribute('data-filter-output');\n\t\tif (outputSections !== null) { // The user specified the output lines. -- cwells\n\t\t\toutputSections.split(',').forEach(function (section) {\n\t\t\t\tvar range = section.split('-');\n\t\t\t\tvar outputStart = parseInt(range[0], 10);\n\t\t\t\tvar outputEnd = range.length === 2 ? parseInt(range[1], 10) : outputStart;\n\n\t\t\t\tif (!isNaN(outputStart) && !isNaN(outputEnd)) {\n\t\t\t\t\tif (outputStart < 1) {\n\t\t\t\t\t\toutputStart = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (outputEnd > codeLines.length) {\n\t\t\t\t\t\toutputEnd = codeLines.length;\n\t\t\t\t\t}\n\t\t\t\t\t// Convert start and end to 0-based to simplify the arrays. -- cwells\n\t\t\t\t\toutputStart--;\n\t\t\t\t\toutputEnd--;\n\t\t\t\t\t// Save the output line in an array and clear it in the code so it's not highlighted. -- cwells\n\t\t\t\t\tfor (var j = outputStart; j <= outputEnd; j++) {\n\t\t\t\t\t\toutputLines[j] = codeLines[j];\n\t\t\t\t\t\tcodeLines[j] = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (outputFilter) { // Treat lines beginning with this string as output. -- cwells\n\t\t\tfor (var i = 0; i < codeLines.length; i++) {\n\t\t\t\tif (startsWith(codeLines[i], outputFilter)) { // This line is output. -- cwells\n\t\t\t\t\toutputLines[i] = codeLines[i].slice(outputFilter.length);\n\t\t\t\t\tcodeLines[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar continuationLineIndicies = commandLine.continuationLineIndicies = new Set();\n\t\tvar lineContinuationStr = pre.getAttribute('data-continuation-str');\n\t\tvar continuationFilter = pre.getAttribute('data-filter-continuation');\n\n\t\t// Identify code lines where the command has continued onto subsequent\n\t\t// lines and thus need a different prompt. Need to do this after the output\n\t\t// lines have been removed to ensure we don't pick up a continuation string\n\t\t// in an output line.\n\t\tfor (var j = 0; j < codeLines.length; j++) {\n\t\t\tvar line = codeLines[j];\n\t\t\tif (!line) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Record the next line as a continuation if this one ends in a continuation str.\n\t\t\tif (lineContinuationStr && endsWith(line, lineContinuationStr)) {\n\t\t\t\tcontinuationLineIndicies.add(j + 1);\n\t\t\t}\n\t\t\t// Record this line as a continuation if marked with a continuation prefix\n\t\t\t// (that we will remove).\n\t\t\tif (j > 0 && continuationFilter && startsWith(line, continuationFilter)) {\n\t\t\t\tcodeLines[j] = line.slice(continuationFilter.length);\n\t\t\t\tcontinuationLineIndicies.add(j);\n\t\t\t}\n\t\t}\n\n\t\tenv.code = codeLines.join('\\n');\n\t});\n\n\tPrism.hooks.add('before-insert', function (env) {\n\t\tvar commandLine = getCommandLineInfo(env);\n\n\t\tif (commandLine.complete) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reinsert the output lines into the highlighted code. -- cwells\n\t\tvar codeLines = env.highlightedCode.split('\\n');\n\t\tvar outputLines = commandLine.outputLines || [];\n\t\tfor (var i = 0, l = codeLines.length; i < l; i++) {\n\t\t\t// Add spans to allow distinction of input/output text for styling\n\t\t\tif (outputLines.hasOwnProperty(i)) {\n\t\t\t\t// outputLines were removed from codeLines so missed out on escaping\n\t\t\t\t// of markup so do it here.\n\t\t\t\tcodeLines[i] = '<span class=\"token output\">'\n\t\t\t\t\t+ Prism.util.encode(outputLines[i]) + '</span>';\n\t\t\t} else {\n\t\t\t\tcodeLines[i] = '<span class=\"token command\">'\n\t\t\t\t\t+ codeLines[i] + '</span>';\n\t\t\t}\n\t\t}\n\t\tenv.highlightedCode = codeLines.join('\\n');\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!hasCommandLineInfo(env)) {\n\t\t\t// the previous hooks never ran\n\t\t\treturn;\n\t\t}\n\n\t\tvar commandLine = getCommandLineInfo(env);\n\n\t\tif (commandLine.complete) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar pre = env.element.parentElement;\n\t\tif (CLASS_PATTERN.test(env.element.className)) { // Remove the class \"command-line\" from the <code>\n\t\t\tenv.element.className = env.element.className.replace(CLASS_PATTERN, ' ');\n\t\t}\n\t\tif (!CLASS_PATTERN.test(pre.className)) { // Add the class \"command-line\" to the <pre>\n\t\t\tpre.className += ' command-line';\n\t\t}\n\n\t\tfunction getAttribute(key, defaultValue) {\n\t\t\treturn (pre.getAttribute(key) || defaultValue).replace(/\"/g, '&quot');\n\t\t}\n\n\t\t// Create the \"rows\" that will become the command-line prompts. -- cwells\n\t\tvar promptLines = '';\n\t\tvar rowCount = commandLine.numberOfLines || 0;\n\t\tvar promptText = getAttribute('data-prompt', '');\n\t\tvar promptLine;\n\t\tif (promptText !== '') {\n\t\t\tpromptLine = '<span data-prompt=\"' + promptText + '\"></span>';\n\t\t} else {\n\t\t\tvar user = getAttribute('data-user', 'user');\n\t\t\tvar host = getAttribute('data-host', 'localhost');\n\t\t\tpromptLine = '<span data-user=\"' + user + '\" data-host=\"' + host + '\"></span>';\n\t\t}\n\n\t\tvar continuationLineIndicies = commandLine.continuationLineIndicies || new Set();\n\t\tvar continuationPromptText = getAttribute('data-continuation-prompt', '>');\n\t\tvar continuationPromptLine = '<span data-continuation-prompt=\"' + continuationPromptText + '\"></span>';\n\n\t\t// Assemble all the appropriate prompt/continuation lines\n\t\tfor (var j = 0; j < rowCount; j++) {\n\t\t\tif (continuationLineIndicies.has(j)) {\n\t\t\t\tpromptLines += continuationPromptLine;\n\t\t\t} else {\n\t\t\t\tpromptLines += promptLine;\n\t\t\t}\n\t\t}\n\n\t\t// Create the wrapper element. -- cwells\n\t\tvar prompt = document.createElement('span');\n\t\tprompt.className = PROMPT_CLASS;\n\t\tprompt.innerHTML = promptLines;\n\n\t\t// Remove the prompt from the output lines. -- cwells\n\t\tvar outputLines = commandLine.outputLines || [];\n\t\tfor (var i = 0, l = outputLines.length; i < l; i++) {\n\t\t\tif (outputLines.hasOwnProperty(i)) {\n\t\t\t\tvar node = prompt.children[i];\n\t\t\t\tnode.removeAttribute('data-user');\n\t\t\t\tnode.removeAttribute('data-host');\n\t\t\t\tnode.removeAttribute('data-prompt');\n\t\t\t}\n\t\t}\n\n\t\tenv.element.insertBefore(prompt, env.element.firstChild);\n\t\tcommandLine.complete = true;\n\t});\n\n}());\n"],
  "mappings": "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",
  "names": ["createElement", "className", "tagName", "appendToEl", "el", "document", "appendChild", "equalizePoints", "p1", "p2", "x", "y", "id", "undefined", "roundPoint", "p", "Math", "round", "getDistanceBetween", "abs", "sqrt", "pointsEqual", "clamp", "val", "min", "max", "toTransformString", "scale", "propValue", "setTransform", "style", "transform", "setTransitionStyle", "prop", "duration", "ease", "transition", "defaultCSSEasing", "setWidthHeight", "w", "h", "width", "height", "removeTransitionStyle", "decodeImage", "img", "decode", "catch", "complete", "Promise", "resolve", "reject", "onload", "onerror", "specialKeyUsed", "e", "button", "ctrlKey", "metaKey", "altKey", "shiftKey", "getElementsFromOption", "option", "legacySelector", "parent", "elements", "Element", "NodeList", "Array", "isArray", "from", "selector", "querySelectorAll", "isSafari", "navigator", "vendor", "match", "getViewportSize", "options", "pswp", "getViewportSizeFn", "newViewportSize", "documentElement", "clientWidth", "window", "innerHeight", "parsePaddingOption", "viewportSize", "itemData", "index", "paddingValue", "paddingFn", "padding", "legacyPropName", "toUpperCase", "slice", "Number", "getPanAreaSize", "project", "initialVelocity", "decelerationRate", "getZoomPointsCenter", "didTapOnMainContent", "event", "target", "closest", "addElementHTML", "htmlData", "isCustomSVG", "svgData", "out", "split", "join", "size", "outlineID", "inner", "initArrowButton", "element", "isNextButton", "classList", "add", "setAttribute", "on", "loop", "disabled", "currIndex", "getNumItems", "setZoomedIn", "isZoomedIn", "toggle", "getBoundsByElement", "thumbAreaRect", "getBoundingClientRect", "left", "top", "getCroppedBoundsByElement", "imageWidth", "imageHeight", "hRatio", "vRatio", "fillZoomLevel", "offsetX", "offsetY", "bounds", "innerRect", "getThumbBounds", "instance", "dispatch", "thumbBounds", "thumbnail", "thumbSelector", "matches", "querySelector", "applyFilters", "thumbCropped", "lazyLoadData", "content", "createContentFromData", "zoomLevel", "ZoomLevel", "panAreaSize", "update", "lazyLoad", "setDisplayedSize", "ceil", "initial", "lazyLoadSlide", "getItemData", "defaultPrevented", "LOAD_STATE", "supportsPassive", "DOMEvents", "PanBounds", "MAX_IMAGE_WIDTH", "Slide", "PAN_END_FRICTION", "VERTICAL_DRAG_FRICTION", "MIN_RATIO_TO_CLOSE", "MIN_NEXT_SLIDE_SPEED", "DragHandler", "UPPER_ZOOM_FRICTION", "LOWER_ZOOM_FRICTION", "ZoomHandler", "TapHandler", "AXIS_SWIPE_HYSTERISIS", "DOUBLE_TAP_DELAY", "MIN_TAP_DISTANCE", "Gestures", "MAIN_SCROLL_END_FRICTION", "MainScroll", "KeyboardKeyCodesMap", "getKeyboardEventKey", "Keyboard", "DEFAULT_EASING", "CSSAnimation", "DEFAULT_NATURAL_FREQUENCY", "DEFAULT_DAMPING_RATIO", "SpringEaser", "SpringAnimation", "Animations", "ScrollWheel", "UIElement", "arrowPrev", "arrowNext", "closeButton", "zoomButton", "loadingIndicator", "counterIndicator", "UI", "PhotoSwipeEvent", "Eventable", "Placeholder", "Content", "MIN_SLIDES_TO_CACHE", "ContentLoader", "PhotoSwipeBase", "MIN_OPACITY", "Opener", "defaultOptions", "PhotoSwipe", "IDLE", "LOADING", "LOADED", "ERROR", "addEventListener", "Object", "defineProperty", "get", "constructor", "_pool", "type", "listener", "passive", "_toggleListener", "remove", "removeAll", "forEach", "poolItem", "unbind", "skipPool", "methodName", "types", "eType", "filter", "push", "eventOptions", "slide", "currZoomLevel", "center", "reset", "_updateAxis", "axis", "elSize", "paddingProp", "data", "correctPan", "panOffset", "elementSize", "fit", "fill", "vFill", "secondary", "maxWidth", "maxHeight", "_getInitial", "_getSecondary", "_getMax", "zoomLevels", "slideData", "_parseZoomLevelOption", "optionPrefix", "optionName", "optionValue", "isActive", "currentResolution", "pan", "isFirstSlide", "opener", "isOpen", "contentLoader", "getContentBySlide", "container", "holderElement", "heavyAppended", "prevDisplayedWidth", "prevDisplayedHeight", "setIsActive", "activate", "deactivate", "append", "transformOrigin", "calculateSize", "load", "updateContentSize", "appendHeavy", "zoomAndPanToInitial", "applyCurrentZoomPan", "appendHeavyNearby", "mainScroll", "isShifted", "destroy", "hasSlide", "resize", "panTo", "force", "scaleMultiplier", "sizeChanged", "getPlaceholderElement", "placeholder", "zoomTo", "destZoomLevel", "centerPoint", "transitionDuration", "ignoreBounds", "isZoomable", "animations", "stopAllPan", "prevZoomLevel", "setZoomLevel", "calculateZoomToPanOffset", "finishTransition", "_setResolution", "startTransition", "isPan", "name", "getCurrentTransform", "onComplete", "easing", "toggleZoom", "zoomAnimationDuration", "point", "totalPanDistance", "getViewportCenterPoint", "zoomFactor", "panX", "panY", "isPannable", "Boolean", "_applyZoomTransform", "currSlide", "zoom", "newResolution", "gestures", "startPan", "start", "stopAll", "change", "prevP1", "dragAxis", "closeOnVerticalDrag", "isMultitouch", "_setPanWithFriction", "bgOpacity", "_getVerticalDragRatio", "applyBgOpacity", "mainScrollChanged", "_panOrMoveMainScroll", "end", "velocity", "indexDiff", "mainScrollShiftDiff", "getCurrSlideX", "currentSlideVisibilityRatio", "moveIndexBy", "correctZoomPan", "_finishPanGestureForAxis", "panPos", "restoreBgOpacity", "projectedPosition", "vDragRatio", "projectedVDragRatio", "close", "correctedPanPosition", "dampingRatio", "initialBgOpacity", "totalPanDist", "startSpring", "onUpdate", "pos", "animationProgressRatio", "floor", "delta", "newMainScrollX", "moveTo", "newPan", "allowPanToNext", "currSlideMainScrollX", "isLeftToRight", "isRightToLeft", "wasAtMinPanPosition", "wasAtMaxPanPosition", "potentialPan", "customFriction", "correctedPan", "_startPan", "_startZoomPoint", "_zoomPoint", "_wasOverFitZoomLevel", "_startZoomLevel", "startP1", "startP2", "minZoomLevel", "maxZoomLevel", "pinchToClose", "_calculatePanForZoomLevel", "ignoreGesture", "destinationZoomLevel", "currZoomLevelNeedsChange", "initialPan", "destinationPan", "panNeedsChange", "naturalFrequency", "now", "newZoomLevel", "click", "originalEvent", "targetClassList", "isImageClick", "contains", "isBackgroundClick", "_doClickOrTapAction", "tap", "doubleTap", "actionName", "actionFullName", "call", "clickToCloseNonZoomable", "prevP2", "_lastStartP1", "_intervalP1", "_numActivePoints", "_ongoingPointers", "_touchEventEnabled", "_pointerEventEnabled", "PointerEvent", "supportsTouch", "maxTouchPoints", "_intervalTime", "_velocityCalculated", "isDragging", "isZooming", "raf", "_tapTimer", "drag", "tapHandler", "events", "scrollWrap", "_onClick", "bind", "_bindEvents", "ontouchmove", "ontouchend", "pref", "down", "up", "cancel", "cancelEvent", "onPointerDown", "onPointerMove", "onPointerUp", "isMousePointer", "pointerType", "preventDefault", "mouseDetected", "_preventPointerEventBehaviour", "_updatePoints", "_clearTapTimer", "_calculateDragDirection", "_updateStartPoints", "Date", "_rafStopLoop", "_rafRenderLoop", "_finishDrag", "_updateVelocity", "_finishTap", "_updatePrevPoints", "requestAnimationFrame", "time", "_getVelocity", "indexOf", "tapDelay", "doubleTapAction", "setTimeout", "clearTimeout", "displacement", "cancelAnimationFrame", "preventPointerEvent", "pointerEvent", "pointerIndex", "findIndex", "ongoingPointer", "pointerId", "splice", "_convertEventPosToPoint", "length", "touchEvent", "touches", "diff", "axisToCheck", "pageX", "offset", "pageY", "identifier", "stopPropagation", "slideWidth", "_currPositionIndex", "_prevPositionIndex", "_containerShiftIndex", "itemHolders", "resizeSlides", "newSlideWidth", "spacing", "slideWidthChanged", "itemHolder", "resetPosition", "appendHolders", "i", "display", "canBeSwiped", "animate", "velocityX", "newIndex", "potentialIndex", "numSlides", "canLoop", "getLoopedIndex", "distance", "stopMainScroll", "destinationX", "updateCurrItem", "isMainScroll", "currDiff", "currDistance", "positionDifference", "diffAbs", "tempHolder", "shift", "setContent", "pop", "unshift", "updateLazy", "dragging", "newSlideIndexOffset", "Escape", "z", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "Tab", "key", "isKeySupported", "_wasFocused", "trapFocus", "initialPointerPos", "_focusRoot", "_onFocusIn", "_onKeyDown", "lastActiveElement", "activeElement", "returnFocus", "focus", "keydownAction", "isForward", "keyCode", "escKey", "arrowKeys", "template", "props", "onFinish", "_target", "_onComplete", "_finished", "_onTransitionEnd", "_helperTimeout", "_finalizeAnimation", "removeEventListener", "_dampingRatio", "_naturalFrequency", "_dampedFrequency", "easeFrame", "deltaPosition", "deltaTime", "coeff", "naturalDumpingPow", "E", "dumpedFCos", "cos", "dumpedFSin", "sin", "_raf", "easer", "prevTime", "animationLoop", "activeAnimations", "_start", "isSpring", "animation", "stop", "isPanRunning", "some", "_onWheel", "deltaX", "deltaY", "wheelToZoom", "deltaMode", "clientX", "clientY", "elementHTML", "html", "isButton", "toLowerCase", "title", "ariaLabel", "ariaText", "innerHTML", "onInit", "onClick", "onclick", "appendTo", "topBar", "order", "indicatorElement", "isVisible", "delayTimeout", "toggleIndicatorClass", "setIndicatorVisibility", "visible", "updatePreloaderVisibility", "isLoading", "preloaderDelay", "ui", "counterElement", "innerText", "indexIndicatorSep", "isRegistered", "uiElementsData", "items", "_lastUpdatedZoomLevel", "init", "sort", "a", "b", "uiElementData", "registerElement", "_onZoomPanUpdate", "elementData", "isClosing", "currZoomLevelDiff", "potentialZoomLevel", "imageClickAction", "details", "assign", "_listeners", "_filters", "addFilter", "fn", "priority", "f1", "f2", "removeFilter", "args", "apply", "off", "imageSrc", "imgEl", "decoding", "alt", "src", "parentNode", "displayedImageWidth", "displayedImageHeight", "isAttached", "isDecoding", "state", "removePlaceholder", "keepPlaceholder", "isLazy", "reload", "usePlaceholder", "placeholderSrc", "msrc", "placeholderEl", "parentElement", "prepend", "isImageContent", "loadImage", "imageElement", "updateSrcsetSizes", "srcset", "onLoaded", "onError", "setSlide", "displayError", "isError", "isInitialSizeUpdate", "image", "sizesWidth", "dataset", "largestUsedSize", "parseInt", "sizes", "String", "errorMsgEl", "errorMsg", "supportsDecode", "finally", "appendImage", "limit", "preload", "_cachedItems", "loadSlideByIndex", "initialIndex", "getContentByIndex", "addToCache", "removeByIndex", "indexToRemove", "item", "removedItem", "find", "numItems", "dataSource", "_getGalleryDOMElements", "gallery", "dataSourceItem", "_domElementToItemData", "galleryElement", "children", "childSelector", "linkEl", "pswpSrc", "href", "pswpSrcset", "pswpWidth", "pswpHeight", "pswpType", "thumbnailEl", "currentSrc", "getAttribute", "pswpCropped", "cropped", "isClosed", "isOpening", "_duration", "_useAnimation", "_croppedZoom", "_animateRootOpacity", "_animateBgOpacity", "_placeholder", "_opacityElement", "_cropContainer1", "_cropContainer2", "_thumbBounds", "_prepareOpen", "open", "hideAnimationDuration", "maxWidthToAnimate", "_applyStartProps", "showAnimationDuration", "showHideAnimationType", "showHideOpacity", "_initialThumbBounds", "_animateZoom", "bg", "opacity", "overflow", "_setClosedStateZoomPan", "willChange", "decoded", "isDelaying", "_initiate", "setProperty", "_animateToOpenState", "_animateToClosedState", "_onAnimationComplete", "_animateTo", "containerOnePanX", "containerOnePanY", "containerTwoPanX", "containerTwoPanY", "animProps", "bgClickAction", "tapAction", "_prepareOptions", "_prevViewportSize", "isDestroying", "hasMouse", "_initialItemData", "keyboard", "_createMainStructure", "rootClasses", "mainClass", "scrollWheel", "isNaN", "updateSize", "pageYOffset", "_handlePageResize", "_updatePageScrollOffset", "goTo", "next", "prev", "refreshSlideContent", "slideIndex", "potentialHolderIndex", "holder", "matchMedia", "test", "userAgent", "setScrollOffset", "body", "Prism", "_self", "lang", "section", "demoOptions", "closeButton", "createElement", "className", "tagName", "appendToEl", "el", "document", "appendChild", "toTransformString", "x", "y", "scale", "propValue", "undefined", "setWidthHeight", "w", "h", "style", "width", "height", "LOAD_STATE", "IDLE", "LOADING", "LOADED", "ERROR", "specialKeyUsed", "e", "button", "ctrlKey", "metaKey", "altKey", "shiftKey", "getElementsFromOption", "option", "legacySelector", "parent", "elements", "Element", "NodeList", "Array", "isArray", "from", "selector", "querySelectorAll", "isPswpClass", "fn", "prototype", "goTo", "isSafari", "navigator", "vendor", "match", "PhotoSwipeEvent", "constructor", "type", "details", "defaultPrevented", "Object", "assign", "preventDefault", "Eventable", "_listeners", "_filters", "pswp", "options", "addFilter", "name", "priority", "push", "sort", "f1", "f2", "removeFilter", "filter", "applyFilters", "args", "forEach", "apply", "on", "off", "listener", "dispatch", "event", "call", "Placeholder", "imageSrc", "container", "element", "imgEl", "decoding", "alt", "src", "setAttribute", "setDisplayedSize", "transformOrigin", "transform", "destroy", "parentNode", "remove", "Content", "itemData", "instance", "index", "data", "placeholder", "slide", "displayedImageWidth", "displayedImageHeight", "Number", "isAttached", "hasSlide", "isDecoding", "state", "content", "removePlaceholder", "keepPlaceholder", "setTimeout", "load", "isLazy", "reload", "usePlaceholder", "placeholderSrc", "msrc", "isFirstSlide", "placeholderEl", "parentElement", "prepend", "isImageContent", "loadImage", "innerHTML", "html", "updateContentSize", "imageElement", "updateSrcsetSizes", "srcset", "complete", "onLoaded", "onload", "onerror", "onError", "setSlide", "isActive", "heavyAppended", "append", "displayError", "isError", "isLoading", "isInitialSizeUpdate", "isZoomable", "image", "sizesWidth", "dataset", "largestUsedSize", "parseInt", "sizes", "String", "lazyLoad", "errorMsgEl", "innerText", "errorMsg", "supportsDecode", "decode", "catch", "finally", "appendImage", "activate", "holderElement", "deactivate", "getViewportSize", "getViewportSizeFn", "newViewportSize", "documentElement", "clientWidth", "window", "innerHeight", "parsePaddingOption", "prop", "viewportSize", "paddingValue", "paddingFn", "padding", "legacyPropName", "toUpperCase", "slice", "getPanAreaSize", "MAX_IMAGE_WIDTH", "ZoomLevel", "panAreaSize", "elementSize", "fit", "fill", "vFill", "initial", "secondary", "max", "min", "update", "maxWidth", "maxHeight", "hRatio", "vRatio", "Math", "_getInitial", "_getSecondary", "_getMax", "zoomLevels", "slideData", "_parseZoomLevelOption", "optionPrefix", "optionName", "optionValue", "currZoomLevel", "lazyLoadData", "createContentFromData", "zoomLevel", "ceil", "lazyLoadSlide", "getItemData", "PhotoSwipeBase", "getNumItems", "numItems", "dataSource", "length", "items", "_getGalleryDOMElements", "gallery", "dataSourceItem", "_domElementToItemData", "galleryElement", "children", "childSelector", "linkEl", "querySelector", "pswpSrc", "href", "pswpSrcset", "pswpWidth", "pswpHeight", "pswpType", "thumbnailEl", "currentSrc", "getAttribute", "pswpCropped", "cropped", "thumbCropped", "PhotoSwipeLightbox", "_uid", "shouldOpen", "_preloadedContent", "onThumbnailsClick", "bind", "init", "gallerySelector", "addEventListener", "initialPoint", "clientX", "clientY", "clickedIndex", "getClickedIndex", "currentTarget", "loadAndOpen", "getClickedIndexFn", "clickedTarget", "target", "childElements", "clickedChildIndex", "findIndex", "child", "contains", "galleryElements", "initialPointerPos", "preload", "promiseArray", "pswpModuleType", "pswpModule", "Promise", "resolve", "Error", "openPromise", "preloadFirstSlide", "uid", "all", "then", "iterableModules", "mainModule", "_openPhotoswipe", "module", "default", "keys", "contentLoader", "addToCache", "removeEventListener", "lightbox", "Prism", "j"]
}
