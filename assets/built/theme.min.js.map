{"version":3,"sources":["dark-mode-toggle.js","dropdown-navigation.js","pagination.js","copy-link.js","table-of-contents.js","sidebar.js","lightbox.js","enrol-dialog.js"],"names":["storedDataColorTheme","darkModeButton","document","querySelector","lightModeButton","onClick","event","targetDataColorTheme","documentElement","getAttribute","commentsScript","setAttribute","localStorage","setItem","getItem","window","matchMedia","matches","addEventListener","menuIndentRegex","processMenuItems","div1","p1","menuItems","querySelectorAll","let","submenu","i","length","menuName","div","match","lastElementChild","innerText","replace","trim","classList","add","anchor","createElement","appendChild","createTextNode","sup","p2","ol","replaceChildren","remove","nav","activeSubmenu","clickedItem","target","closest","contains","preventDefault","toggle","isInfinite","callback","currentArticleList","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","buttonElement","nextElement","onPageLoad","fragment","elems","resNextElement","this","status","removeEventListener","onScroll","onResize","nextPageArticleList","response","createDocumentFragment","forEach","item","clonedItem","importNode","style","position","visibility","push","href","scrollHeight","imagesLoaded","getBoundingClientRect","bottom","console","log","requestTick","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestAnimationFrame","scrollY","innerHeight","passive","copyLinkElement","getElementById","navigator","clipboard","writeText","location","tooltip","className","textContent","setTimeout","tocbot","init","tocSelector","contentSelector","hasInnerContainers","onload","toc","display","offsetHeight","tocButton","tableOfContents","toggleTableOfContents","e","tocOpenElement","tocToggleButton","updateProgress","totalHeight","body","clientHeight","windowHeight","progress","toFixed","setProperty","sidebar","PhotoSwipeLightbox","arrow","lightbox","arrowPrevSVG","arrowNextSVG","zoom","gallery","children","bgOpacity","closeOnScroll","Xpadding","top","left","right","imageClickAction","tapAction","pswpModule","import","addFilter","itemData","element","linkEl","w","h","naturalWidth","naturalHeight","src","srcset","dialog","closeButton","form","close","MutationObserver","mutation","mutations","attributeName","showModal","observe","attributes","attributeFilter"],"mappings":"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","file":"theme.min.js","sourcesContent":["/*\n * toggle between dark and light mode\n * if the user has set a system preference then default to that setting\n * if they specify a setting save it in local storage so it is remembered next time\n * \n*/\n\n(function() {\n    var darkModeButton = document.querySelector(\"button.dark-mode\");\n    var lightModeButton = document.querySelector(\"button.light-mode\");\n\n    if (! darkModeButton || ! lightModeButton) {\n        return;\n    }\n\n    var storedDataColorTheme = localStorage.getItem('data-color-scheme') || (window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\");\n\n    if (storedDataColorTheme) {\n        document.documentElement.setAttribute('data-color-scheme', storedDataColorTheme);\n    }\n\n    function onClick(event) {\n        var currentTheme = document.documentElement.getAttribute(\"data-color-scheme\");\n        var targetDataColorTheme = currentTheme == \"dark\" ? \"light\" : \"dark\";\n\n        document.documentElement.setAttribute('data-color-scheme', targetDataColorTheme)\n        localStorage.setItem('data-color-scheme', targetDataColorTheme);\n\n        // set color-scheme on the comments iframe\n        // As of 5.0 Ghost helper supports {{comments mode=\"auto\" }} which will use the background color to determine if the theme is using a dark mode\n        // ... but this only works after a screen refresh.  The code below will make the scheme change on clicking the dark mode toggle\n        const commentsScript = document.querySelector('script[data-color-scheme]');\n        if (commentsScript) {\n            commentsScript.setAttribute('data-color-scheme', targetDataColorTheme);\n        };\n    }\n    darkModeButton.addEventListener('click', onClick);\n    lightModeButton.addEventListener('click', onClick);\n\n  })();","/* \n* create the <li> html structure under the <nav> element used in the site-header\n* the items are structured based on markup in the ghost navigation names:\n* names prefixed with - indicate a submenu and -- indicates a submenu item\n* for example\n*\n*  ghost navigation          rendered html\n*  -----------------         ------------------\n*  HOME                      <li class='nav-item'>\n*                              <a href='http://localhost:2368/'>HOME</a>\n*                            </li>\n*  -HONDA C90                <li class='nav-item has-submenu'>\n*                                <a href='#'>HONDA C90 ⌄</a>\n*                                <div class='submenu'>\n*                                    <div class='submenu-header'>\n*                                        <p class='submenu-title'>HONDA C90</p>\n*                                        <button class='submenu-close icon'>✕</button>\n*                                    </div>\n*                                    <ol class='submenu-items'>\n*  --introduction                        <li class='submenu-item'>\n*                                            <a href='http://localhost:2368/2019/11/16/honda-c90-introduction/'>introduction</a>\n*                                        </li>\n*  --engine                              <li class='submenu-item'>\n*                                            <a href='http://localhost:2368/tag/engine/'>engine</a>\n*                                        </li>\n*                                    </ol>\n*                                </div>\n*                            </li>\n*/\n\n(function () {\n  const menuIndentRegex = /(^-{1,})(.*)/; // Match the -submenu and --submenu-item navigation entries\n\n  function createSubMenu(menuName) {\n      const div = document.createElement('div');\n      div.classList.add('submenu');\n\n      const div1 = document.createElement('div');\n      div1.classList.add('submenu-header');\n\n      const p1 = document.createElement('p');\n      p1.classList.add('submenu-title');\n      p1.appendChild(document.createTextNode(menuName));\n      div1.appendChild(p1);\n\n      const p2 = document.createElement('button');\n      p2.classList.add('submenu-close', 'icon');\n      p2.appendChild(document.createTextNode('✕'));\n      div1.appendChild(p2);\n\n      div.appendChild(div1);\n\n      const ol = document.createElement('ol');\n      ol.classList.add('submenu-items');\n\n      div.appendChild(ol);\n\n      return div;\n  }\n\n  function processMenuItems() {\n      const menuItems = document.querySelectorAll('.nav-items .nav-item');\n      let submenu = null;\n\n      for (let i = 0; i < menuItems.length; ++i) {\n          const match = menuItems[i].lastElementChild.innerText.match(menuIndentRegex);\n\n          if (match) {\n              // Remove the submenu & submenu-item indent indicators (- --)\n              menuItems[i].lastElementChild.innerText = menuItems[i].lastElementChild.innerText.replace(menuIndentRegex,'$2').trim();\n              const menuName=menuItems[i].lastElementChild.innerText;\n\n              if (match[1].length == 1) { // Submenu (-)\n                  menuItems[i].classList.add('has-submenu');\n\n                  const anchor = document.createElement('a');\n                  anchor.setAttribute('href', '#');\n                  anchor.classList.add('tabindex=0');\n                  anchor.appendChild(document.createTextNode(menuName));\n          \n                  const sup = document.createElement('sup');\n                  sup.appendChild(document.createTextNode(' ⌄'));\n                  anchor.appendChild(sup);\n\n                  const div = createSubMenu(menuName);\n                  menuItems[i].replaceChildren(anchor);\n                  menuItems[i].appendChild(div);\n                  submenu = menuItems[i];\n              } else if (submenu) { // Submenu item (--)\n                  menuItems[i].classList.add('submenu-item');\n                  menuItems[i].classList.remove('nav-item');\n                  submenu.querySelector('.submenu-items').appendChild(menuItems[i]);\n              }\n          }\n      }\n      document.querySelector('.nav').classList.add('nav-ready');\n  }\n\n  processMenuItems();\n})();\n\n/* \n * open/close nav (main) menu and submenus\n * .nav.active-nav is set when the nav is opened using the hamburger button \n * .submenu.active-submenu is set when an item with a submenu is opened\n*/\n(function() {\n  const nav = document.querySelector('.nav');\n  const navToggle = document.querySelector('.nav-toggle');\n\n  function handleDocumentClick(event) {\n    let activeSubmenu = nav.querySelector('.active-submenu');\n    let clickedItem;\n\n\n    // when a submenu item is clicked no need to do anythng further (new page will open)\n    if (event.target.closest(\".submenu-item\")) {\n      return;\n    }\n    else if (event.target.closest(\".nav-item\") && ! event.target.closest(\".submenu-header\")) { // do not count a click on a submenu header as a clicked item\n      clickedItem= event.target.closest(\".nav-item\");\n    }\n\n    if (clickedItem) {\n      if (clickedItem.classList.contains('has-submenu')) {\n        event.preventDefault(); // prevent the page scrolling to the top when a menu item is clicked;\n      }\n\n      if (activeSubmenu) { // close any previously opened submenu\n        activeSubmenu.classList.remove('active-submenu');\n      }\n\n      if (! clickedItem.contains(activeSubmenu)) { // do not reopen the submenu item if it was closed by the statement above\n        if (clickedItem.classList.contains(\"has-submenu\")) {\n          clickedItem.querySelector(\".submenu\").classList.add('active-submenu');\n        }\n      }\n\n      return;\n    }\n\n    // toggle nav if the hamburger menu is clicked\n    if (event.target.closest('.nav-toggle')) {\n      nav.classList.toggle('active-nav');\n      return;\n    }\n\n    // when click is outside of menus, close the latest menu\n    if (activeSubmenu) { // close any previously opened submenu\n      activeSubmenu.classList.remove('active-submenu');\n    }\n    else if (nav.classList.contains('active-nav')) {\n        nav.classList.remove('active-nav');\n    }\n  }\n\n  document.addEventListener('click', handleDocumentClick);\n})();\n","/* pagination */\n(function (isInfinite, callback) {\n    var buttonElement = document.querySelector('.pagination');\n\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement && buttonElement) {\n        buttonElement.remove();\n        return;\n    }\n\n    // post list element\n    var currentArticleList = document.querySelector('.paginated');\n    if (!currentArticleList) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            buttonElement.remove();\n            return;\n        }\n\n        // append next page of article-cards\n        // the next elements are organized as per index.hbs\n        var nextPageArticleList = this.response.querySelectorAll('.article-card');\n        var fragment = document.createDocumentFragment();\n        var elems = [];\n        nextPageArticleList.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n\n            var clonedItem = document.importNode(item, true);\n\n            if (callback) {\n                clonedItem.style.position = 'absolute';\n                clonedItem.style.visibility = 'hidden';\n                elems.push(clonedItem);\n            }\n\n            fragment.appendChild(clonedItem);\n        });\n\n        currentArticleList.appendChild(fragment);\n\n        if (callback) {\n            callback(elems);\n        }\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            if (buttonElement) {\n                buttonElement.remove();\n            }\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n\n        if (isInfinite) {\n            imagesLoaded(currentArticleList, function () {\n                if (currentArticleList.getBoundingClientRect().bottom <= lastWindowHeight) {\n                    console.log(currentArticleList.getBoundingClientRect().bottom, lastWindowHeight)\n                    requestTick();\n                }\n            });\n        }\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (isInfinite && lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    if (isInfinite) {\n        window.addEventListener('scroll', onScroll, {passive: true});\n        window.addEventListener('resize', onResize);\n        requestTick();\n    } else {\n        buttonElement.addEventListener('click', requestTick);\n    }\n})(false);\n","/* copy link button (copies link and shows a tooltip)  */\n(function() {\n    const copyLinkElement = document.getElementById(\"copy-link\")  ;\n    if (! copyLinkElement)\n        return;\n\n    function copyLink() {\n        navigator.clipboard.writeText(window.location.href);\n\n        const tooltip = document.createElement('div');\n        tooltip.className = 'tooltip';\n        tooltip.textContent = 'Copied!';\n        copyLinkElement.appendChild(tooltip);\n\n        setTimeout(() => { tooltip.remove(); }, 1000);\n    }\n    copyLinkElement.addEventListener(\"click\", copyLink, false);\n})();","/*\n * table of contents initialistation\n*/\n(function () {\n    tocbot.init({\n    tocSelector: '.toc',\n    contentSelector: '.article',\n    hasInnerContainers: true\n    })\n    \n})();\n\n// safari fix  - toc not showing without a forced repaint\nwindow.onload = function() {\n  const toc = document.querySelector('.table-of-contents');\n  if (toc) {\n      // Force a repaint\n      toc.style.display = 'none';\n      toc.offsetHeight;\n      toc.style.display = 'flex';\n  }\n};\n\n/* \n * toggle mobile toc when toc icon is clicked\n*/\n(function() {\n    const tocButton = document.querySelector(\"#toc-toggle\");\n    const tableOfContents = document.querySelector(\".table-of-contents\");\n\n    if (!tableOfContents) {\n      return;\n    }\n  \n    function toggleTableOfContents(){\n        tableOfContents.classList.toggle(\"toc-open\");\n    }\n    if (!tocButton) {\n      return;\n    }\n\n    window.addEventListener('click', function(e){\n      let tocOpenElement = null;\n      tocOpenElement = tableOfContents.querySelector(\".toc-open\");\n\n      if (tocOpenElement && tocOpenElement.contains(e.target)) {\n          return;\n      }\n\n      // Close TOC when clicking outside the TOC\n      if (!tableOfContents.contains(e.target) && !tocButton.contains(e.target) && tableOfContents.classList.contains(\"toc-open\")) {\n          toggleTableOfContents();\n      }\n    });\n  \n    /* Toggle mobile toc */\n    tocButton.addEventListener('click', toggleTableOfContents, false);\n  \n  })();\n\n\n/*\n * update reading progress based on scroll position\n*/\n(function () {\n  const tocToggleButton = document.querySelector('#toc-toggle');\n  if (!tocToggleButton) {\n    return;\n  }\n\n  function updateProgress() {\n    const totalHeight = document.body.clientHeight;\n    const windowHeight = document.documentElement.clientHeight;\n    const position = window.scrollY;\n    const progress = position / (totalHeight - windowHeight)*100;\n    tocToggleButton.setAttribute('data-progress', `${progress.toFixed(0)}%`);\n\n    // this is used to update the circular progress bar show around the toc button\n    tocToggleButton.style.setProperty(\n    '--conic-gradient',\n    `var(--reading-progress-color) 0deg 0%,  \n      var(--reading-progress-color) 0deg ${ progress.toFixed(3) }%,\n      var(--background-color) 0deg ${ 1 - progress.toFixed(3) }%,\n      var(--background-color) 0deg 360deg`,\n    );\n    requestAnimationFrame(updateProgress);\n  }\n  requestAnimationFrame(updateProgress);\n})();\n","/* toggle the visibility of the share share icons */\n(function() {\n    const sidebar= document.querySelector('.sidebar');\n    if (! sidebar)\n        return;\n    \n    function toggleExpanded() {\n        sidebar.classList.toggle('share-links-expanded');\n    }\n\n    document.getElementById('share-button').addEventListener('click', toggleExpanded);\n\n})();\n","\n/* \nas of PhotoSwipe5 the script is imported as an ES module.   This means that this script must be imported into\nthe web page using\n<script type=\"module\" >\n</scipt>\n*/\nimport PhotoSwipeLightbox from './photoswipe-lightbox.esm.min.js';\n(function () {\n  const arrow =  ' <svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 32 30\" width=\"32\" height=\"30\">\\\n    <path d=\"M26.667 14.667v2.667h-16L18 24.667l-1.893 1.893L5.547 16l10.56-10.56L18 7.333l-7.333 7.333h16z\"> \\\n    </path> </svg>';\n\n  const options = {\n    arrowPrevSVG: arrow,\n    arrowNextSVG: arrow,\n    zoom: false,\n    gallery: '.kg-image-card, .kg-gallery-card',\n    children: 'img',\n    bgOpacity: 0.8,\n    closeOnScroll: true,\n    Xpadding: { top: 40, bottom: 40, left: 0, right: 0 },\n    imageClickAction: 'close',\n    tapAction: 'close',\n    pswpModule: () => import('./photoswipe.esm.min.js')\n  };\n\n  const lightbox = new PhotoSwipeLightbox(options);\n\n  lightbox.init();\n\n  /* \n  modify the item data used by photoswipe based on the attributes on the card image.\n  For images without height and width variables (e.g from posts converted from wordpress \n  the attributes are retrieved from the image\n  */\n  lightbox.addFilter('domItemData', (itemData, element, linkEl) => {\n\n    if (itemData) {\n      itemData.w = element.getAttribute(\"width\");\n      itemData.h = element.getAttribute(\"height\");\n      if ( ! itemData.h || ! itemData.w ) {\n        // get the original image size\n        itemData.w = element.naturalWidth;\n        itemData.h = element.naturalHeight;\n      }\n      itemData.src = element.getAttribute(\"src\");\n      itemData.srcset = element.getAttribute(\"srcset\");\n    }\n    return itemData;\n  });\n})();\n","/* this function will open a pop-up window asking the user to check their inbox having enrolled for a newsletter\n* as of 2024/09 this is only required for newsletter registrations.  When using the portal/sign-up feature \n* Ghost automatically opens a similar window\n*/\n(function() {\n    const dialog = document.querySelector(\".enrol-dialog\");\n    const closeButton = document.querySelector(\".enrol-dialog-button\");\n    const form = document.querySelector(\"form.enrol-newsletter\");\n\n    if (dialog && closeButton) {\n        closeButton.addEventListener(\"click\", () => {\n            dialog.close();\n            dialog.style.display = \"none\"; \n        });\n    }\n\n    if (form) {\n        const observer = new MutationObserver((mutations) => {\n            for (const mutation of mutations) {\n                if (mutation.attributeName === \"class\" && mutation.target.classList.contains(\"success\")) {\n                    dialog.showModal();\n                    dialog.style.display = \"flex\";\n                    break; \n                }\n            }\n        });\n        observer.observe(form, { attributes: true, attributeFilter: [\"class\"] });\n    }\n})();\n\n"]}