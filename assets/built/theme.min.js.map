{"version":3,"sources":["dropdown-menu.js","pagination.js","responsive-video.js","copy-link.js","dark-mode-toggle.js","table-of-contents.js","lightbox.js"],"names":[],"mappingstIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"theme.min.js","sourcesContent":["/* \n * create sub menu structure\n\n    ghost menu              rendered html \n  --------------          ------------------\n    Home                    <li>Home<li>\n    About                   <li>About<li>\n    -submenu 1              <li class=\"item has-submenu\">submenu 1 <ul submenu>\n    --subitem 1               <li class=\"subitem\">subitem 1</li> <ul>\n    --subitem 2               <li class=\"subitem\">subitem 2</li> </ul></li>\n*/\n\n(function () {\n  // this regex matches the -submenu --subitem  navigation entries\n  const regex= /(^-{1,})(.*)/;\n  const submenuIcon = \"<svg class='submenu-dropdown-icon' xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' viewBox='0 0 16 16'> \\\n    <path d='M4.5 3.62251L1.11184 0L0 1.18875L4.5 6L9 1.18875L7.88816 0L4.5 3.62251Z'></path> \\\n  </svg>\";\n  // get all the the nav items\n  //body > div.site > header > nav > ul > ul > li:nth-child(1)\n  let menuItems = document.querySelectorAll('.item');\n  let i, match, submenu;\n\n  for (i = 0; i < menuItems.length; ++i) {\n\n    match = menuItems[i].lastElementChild.innerText.match(regex);\n\n    if (match) {\n      //remove the submenu & subitem flags\n      menuItems[i].lastElementChild.innerText = menuItems[i].lastElementChild.innerText.replace(regex,\"$2\");\n\n      if (match[1].length == 1) {\n        menuItems[i].classList.add(\"has-submenu\");\n        menuItems[i].innerHTML += submenuIcon;\n        menuItems[i].appendChild(document.createElement('ul'));\n        menuItems[i].querySelector('ul').classList=\"submenu\";\n        menuItems[i].querySelector('a').removeAttribute(\"href\");\n        menuItems[i].querySelector('a').classList.add('tabindex=\"0\"');\n        submenu=menuItems[i];\n      }\n      else if (submenu) {\n        menuItems[i].classList.add(\"subitem\");\n        menuItems[i].classList.remove(\"item\");\n        submenu.getElementsByTagName(\"ul\")[0].appendChild(menuItems[i]);\n      }\n    }\n  }\n  // set this class so that the menu items remain hidden until this script finishes\n  document.querySelector(\".menu\").classList.add(\"menu-ready\");\n})();\n\n/* \n * toggle menu and submenus\n * .site.menu-open is set when the menu is opened using the hamburger button (used on small screens)\n * item.submenu-open is set when an item with a submenu is clicked (can be used on both mobile and widescreen)\n*/\n(function() {\n  const openMenuButton = document.querySelector(\".open-menu\");\n  const closeMenuButton = document.querySelector(\".close-menu\");\n  const site = document.querySelector(\".site\");\n  const submenuItems = document.querySelectorAll(\".has-submenu\");\n\n  function toggleMenu(){\n      site.classList.toggle(\"menu-open\");\n  }\n\n  /* toggle submenu */\n  function toggleItem() {\n    if (this.classList.contains(\"submenu-open\")) { // this submenu is already active\n      this.classList.remove(\"submenu-open\");\n    } else if (site.querySelector(\".submenu-open\")) {  // another submenu is active\n      site.querySelector(\".submenu-open\").classList.remove(\"submenu-open\");\n      this.classList.add(\"submenu-open\");\n    } else {\n      this.classList.add(\"submenu-open\"); \n    }\n\n  }\n\n  /* close menus on click */\n  window.addEventListener('click', function(e){\n    /* close submenu when clicking anywhere on the menu */\n    if (site.querySelector(\".submenu-open\")) {\n      let isClickInside = site.querySelector(\".submenu-open\").contains(e.target);\n\n      if (!isClickInside && site.querySelector(\".submenu-open\")) {\n        site.querySelector(\".submenu-open\").classList.remove(\"submenu-open\");\n      }\n    }\n    /* close menu when clicking ouside the menu */\n    if (!site.contains(e.target) && !openMenuButton.contains(e.target) &&\n       site.classList.contains(\"menu-open\")) {\n          toggleMenu();\n    }\n  });\n\n  /* Toggle mobile menu */\n  openMenuButton.addEventListener('click', toggleMenu, false);\n  closeMenuButton.addEventListener('click', toggleMenu, false);\n\n  /* toggle submenu items */\n  for (let item of submenuItems) {\n    if (item.querySelector(\".submenu\")) {\n      item.addEventListener(\"click\", toggleItem, false);\n    }\n    item.addEventListener(\"keypress\", toggleItem, false);\n  }\n})();\n","/* pagination */\n(function (isInfinite, callback) {\n    var buttonElement = document.querySelector('.load-more');\n\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement && buttonElement) {\n        buttonElement.remove();\n        return;\n    }\n\n    // post list element\n    var listElement = document.querySelector('.with-pagination:not(.featured):not(.related)');\n    if (!listElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            buttonElement.remove();\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('.with-pagination:not(.featured):not(.related) > *');\n        var fragment = document.createDocumentFragment();\n        var elems = [];\n\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            var clonedItem = document.importNode(item, true);\n\n            if (callback) {\n                clonedItem.style.position = 'absolute';\n                clonedItem.style.visibility = 'hidden';\n                elems.push(clonedItem);\n            }\n\n            fragment.appendChild(clonedItem);\n        });\n\n        listElement.appendChild(fragment);\n\n        if (callback) {\n            callback(elems);\n        }\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            if (buttonElement) {\n                buttonElement.remove();\n            }\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n\n        if (isInfinite) {\n            imagesLoaded(listElement, function () {\n                if (listElement.getBoundingClientRect().bottom <= lastWindowHeight) {\n                    console.log(listElement.getBoundingClientRect().bottom, lastWindowHeight)\n                    requestTick();\n                }\n            });\n        }\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (isInfinite && lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    if (isInfinite) {\n        window.addEventListener('scroll', onScroll, {passive: true});\n        window.addEventListener('resize', onResize);\n        requestTick();\n    } else {\n        buttonElement.addEventListener('click', requestTick);\n    }\n})(false);\n","/* Responsive video in post content */\n(function () {\n    const sources = [\n        '.article-content iframe[src*=\"youtube.com\"]',\n        '.article-content iframe[src*=\"youtube-nocookie.com\"]',\n        '.article-content iframe[src*=\"player.vimeo.com\"]',\n        '.article-content iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        '.article-content object',\n        '.article-content embed',\n    ];\n    reframe(document.querySelectorAll(sources.join(',')));\n})();\n","/* copy link button (copies link and shows a tooltip) */\n(function() {\n    const socialLinkIconCopy = document.querySelector(\".social-link-icon-copy\")  ;\n    if (! socialLinkIconCopy)\n        return;\n\n    function copyLink() {\n        navigator.clipboard.writeText(window.location.href);\n\n        socialLinkIconCopy.insertAdjacentHTML('afterend','<div class=copy-link-tooltip>copied</div>');\n\n        setTimeout( () => {\n            document.querySelectorAll('.copy-link-tooltip').forEach(el => el.remove()); \n        }, 1000);\n    }\n\n\n    socialLinkIconCopy.addEventListener(\"click\", copyLink, false);\n})();","\n(function() {\n    var darkModeToggle = document.getElementById(\"dark-mode-toggle\");\n\n    if (darkModeToggle) {\n        var storedTheme = localStorage.getItem('theme') || (window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\");\n        if (storedTheme)\n            document.documentElement.setAttribute('data-theme', storedTheme)\n\n        setTimeout(function() {\n            var targetTheme = storedTheme == \"dark\" ? \"light\" : \"dark\";\n        }, 1000);\n\n        darkModeToggle.onclick = function() {\n            var currentTheme = document.documentElement.getAttribute(\"data-theme\");\n            var targetTheme = \"light\";\n\n            if (currentTheme === \"light\") {\n                targetTheme = \"dark\";\n            }\n\n            document.documentElement.setAttribute('data-theme', targetTheme)\n            localStorage.setItem('theme', targetTheme);\n\n        };\n    }\n})();","// table of contents\n(function () {\n    tocbot.init({\n    tocSelector: '.toc',\n    contentSelector: '.article-content',\n    hasInnerContainers: true\n    })\n})();\n\n\n/* \n * toggle floating toc\n*/\n(function() {\n    const tocButton = document.querySelector(\".toc-button\");\n    const tableOfContents = document.querySelector(\".table-of-contents\");\n  \n    function toggleTableOfContents(){\n        tableOfContents.classList.toggle(\"active\");\n    }\n    if (!tocButton) {\n      return;\n    }\n\n    window.addEventListener('click', function(e){\n      /* close toc when clicking anywhere on the toc */\n      if (tableOfContents.querySelector(\".active\")) {\n        let isClickInside = tableOfContents.querySelector(\".active\").contains(e.target);\n  \n        if (!isClickInside && tableOfContents.querySelector(\".active\")) {\n          tableOfContents.querySelector(\".active\").classList.remove(\"active\");\n        }\n      }\n      /* close toc when clicking ouside the toc */\n      if (!tableOfContents.contains(e.target) && !tocButton.contains(e.target) &&\n         tableOfContents.classList.contains(\"active\")) {\n            toggleTableOfContents();\n      }\n    });\n  \n    /* Toggle mobile toc */\n\n    tocButton.addEventListener('click', toggleTableOfContents, false);\n  \n  })();","\n/* \nas of PhotoSwipe5 the script is imported as an ES module.   This means that this script must be imported into\nthe web page using\n<script type=\"module\" >\n</scipt>\n*/\nimport PhotoSwipeLightbox from './photoswipe-lightbox.esm.min.js';\n(function () {\n  const arrow =  ' <svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 32 30\" width=\"32\" height=\"30\">\\\n    <path d=\"M26.667 14.667v2.667h-16L18 24.667l-1.893 1.893L5.547 16l10.56-10.56L18 7.333l-7.333 7.333h16z\"> \\\n    </path> </svg>';\n\n  const options = {\n    arrowPrevSVG: arrow,\n    arrowNextSVG: arrow,\n    zoom: false,\n    gallery: '.kg-image-card, .kg-gallery-card',\n    children: 'img',\n    bgOpacity: 0.8,\n    closeOnScroll: true,\n    padding: { top: 40, bottom: 40, left: 0, right: 0 },\n    pswpModule: () => import('./photoswipe.esm.min.js')\n  };\n\n  const lightbox = new PhotoSwipeLightbox(options);\n\n  lightbox.init();\n\n  /* \n  modify the item data used by photoswipe based on the attributes on the card image.\n  For images without height and width variables (e.g from posts converted from wordpress \n  the attributes are retrieved from the image\n  */\n  lightbox.addFilter('domItemData', (itemData, element, linkEl) => {\n\n    if (itemData) {\n      itemData.w = element.getAttribute(\"width\");\n      itemData.h = element.getAttribute(\"height\");\n      if ( ! itemData.h || ! itemData.w ) {\n        // get the original image size\n        itemData.w = element.naturalWidth;\n        itemData.h = element.naturalHeight;\n      }\n      itemData.src = element.getAttribute(\"src\");\n      itemData.srcset = element.getAttribute(\"srcset\");\n    }\n    return itemData;\n  });\n})();\n"]}